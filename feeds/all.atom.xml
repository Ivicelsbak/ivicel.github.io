<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>take thoughts</title><link href="http://ivicel.github.io/" rel="alternate"></link><link href="http://ivicel.github.io/feeds/all.atom.xml" rel="self"></link><id>http://ivicel.github.io/</id><updated>2017-02-23T00:00:00+08:00</updated><entry><title>JavaScript原型</title><link href="http://ivicel.github.io/javascriptyuan-xing.html" rel="alternate"></link><published>2017-02-23T00:00:00+08:00</published><updated>2017-02-23T00:00:00+08:00</updated><author><name>Ivicel</name></author><id>tag:ivicel.github.io,2017-02-23:/javascriptyuan-xing.html</id><summary type="html">&lt;h4&gt;对象属性特征&lt;/h4&gt;
&lt;p&gt;1.数据属性
&lt;code&gt;[[Configurable]]&lt;/code&gt; 能否通过 &lt;code&gt;delete&lt;/code&gt; 删除属性从而重新定义属性，能否修改属性，或者能否把属性修改为访问器属性
&lt;code&gt;[[Enumerable]]&lt;/code&gt; 能否通过 &lt;code&gt;for-in&lt;/code&gt; 循环返回属性
&lt;code&gt;[[Writable]]&lt;/code&gt; 能否修改属性的值
&lt;code&gt;[[Value]]&lt;/code&gt; 属性的数据值&lt;/p&gt;
&lt;p&gt;2.访问器属性
&lt;code&gt;[[Configurable]]&lt;/code&gt; 能否通过 &lt;code&gt;delete&lt;/code&gt; 删除属性从而重新定义属性，能否修改属性，或者能否把属性修改为数据属性
&lt;code&gt;[[Enumerable]]&lt;/code&gt; 能否通过 &lt;code&gt;for-in&lt;/code&gt; 循环返回属性
&lt;code&gt;[[Get]]&lt;/code&gt; 在读取属性时调用的函数
&lt;code&gt;[[Set]]&lt;/code&gt; 在写入属性时调用的函数&lt;/p&gt;
&lt;h4&gt;对象属性查找&lt;/h4&gt;
&lt;p&gt;每当代码读取某个对象的某个属性时，都会执行一次搜索，目标是具有给定名字的属性。&lt;/p&gt;
&lt;p&gt;搜索首先从对象实例本身开始。如果在实例中找到了具有给定名字的属性，则返
回该属性的值；&lt;/p&gt;
&lt;p&gt;如果没有找到，则继续搜索指针指向的原型对象，在原型对象中查找具有给定名字的属性。&lt;/p&gt;
&lt;hr&gt;
&lt;h4&gt;判断属性是否为对象本身属性或是在原型链中&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;hasOwnProperty()&lt;/code&gt; 方法断访问是属性是否是在实例中&lt;/p&gt;
&lt;p&gt;&lt;code&gt;in&lt;/code&gt; 操作符会在通过对象能够访问给富属性时返回 &lt;code&gt;true …&lt;/code&gt;&lt;/p&gt;</summary><content type="html">&lt;h4&gt;对象属性特征&lt;/h4&gt;
&lt;p&gt;1.数据属性
&lt;code&gt;[[Configurable]]&lt;/code&gt; 能否通过 &lt;code&gt;delete&lt;/code&gt; 删除属性从而重新定义属性，能否修改属性，或者能否把属性修改为访问器属性
&lt;code&gt;[[Enumerable]]&lt;/code&gt; 能否通过 &lt;code&gt;for-in&lt;/code&gt; 循环返回属性
&lt;code&gt;[[Writable]]&lt;/code&gt; 能否修改属性的值
&lt;code&gt;[[Value]]&lt;/code&gt; 属性的数据值&lt;/p&gt;
&lt;p&gt;2.访问器属性
&lt;code&gt;[[Configurable]]&lt;/code&gt; 能否通过 &lt;code&gt;delete&lt;/code&gt; 删除属性从而重新定义属性，能否修改属性，或者能否把属性修改为数据属性
&lt;code&gt;[[Enumerable]]&lt;/code&gt; 能否通过 &lt;code&gt;for-in&lt;/code&gt; 循环返回属性
&lt;code&gt;[[Get]]&lt;/code&gt; 在读取属性时调用的函数
&lt;code&gt;[[Set]]&lt;/code&gt; 在写入属性时调用的函数&lt;/p&gt;
&lt;h4&gt;对象属性查找&lt;/h4&gt;
&lt;p&gt;每当代码读取某个对象的某个属性时，都会执行一次搜索，目标是具有给定名字的属性。&lt;/p&gt;
&lt;p&gt;搜索首先从对象实例本身开始。如果在实例中找到了具有给定名字的属性，则返
回该属性的值；&lt;/p&gt;
&lt;p&gt;如果没有找到，则继续搜索指针指向的原型对象，在原型对象中查找具有给定名字的属性。&lt;/p&gt;
&lt;hr&gt;
&lt;h4&gt;判断属性是否为对象本身属性或是在原型链中&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;hasOwnProperty()&lt;/code&gt; 方法断访问是属性是否是在实例中&lt;/p&gt;
&lt;p&gt;&lt;code&gt;in&lt;/code&gt; 操作符会在通过对象能够访问给富属性时返回 &lt;code&gt;true&lt;/code&gt;，无论该属性存在于实例中还是原型中。&lt;/p&gt;
&lt;hr&gt;
&lt;h4&gt;函数原型&lt;/h4&gt;
&lt;p&gt;只要创建一个函数，就会根据一组特定的规则为该函数创建一个 &lt;code&gt;prototype&lt;/code&gt; 属性，该属性指向函数的原型对象&lt;/p&gt;
&lt;p&gt;默认的情况下，所有的原型对象都会自动获得一个 &lt;code&gt;constructor&lt;/code&gt; （构造函数) 属性，这个属性包含一个指向 &lt;code&gt;prototype&lt;/code&gt; 属性所在函数的指针&lt;/p&gt;
&lt;p&gt;当调用构造函数创建一个新实例后，该实例的内部将包含一个指针（内部属性），指向函数的原型对象。ECMAScript 5把这个指针叫做 &lt;code&gt;[[prototype]]&lt;/code&gt; ，通过&lt;code&gt;Object.getPrototypeOf()&lt;/code&gt; 访问到这个指针，或是使用非标准属性 &lt;code&gt;__proto__&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="函数原型" src="/images/函数原型指向.svg"&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h4&gt;原型语法&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;写法一&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;Person&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nx"&gt;Person&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;prototype&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Nicholas&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nx"&gt;Person&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;prototype&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;age&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;29&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nx"&gt;Person&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;prototype&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;job&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Software Engineer&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nx"&gt;Person&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;prototype&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;sayName&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;写法二&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;Person&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nx"&gt;Person&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;prototype&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Nicholas&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nx"&gt;age&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;29&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nx"&gt;job&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Software Engineer&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nx"&gt;sayName&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;写法二&lt;/strong&gt;相当把 &lt;code&gt;Person.prototype&lt;/code&gt; 重新指向新的对象&lt;/p&gt;
&lt;h4&gt;1. 工厂模式&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;createPerson&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;age&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;job&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;o&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Object&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="nx"&gt;o&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nx"&gt;o&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;age&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;age&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nx"&gt;o&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;job&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;job&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nx"&gt;o&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;sayName&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="err"&gt;﻿&lt;/span&gt;        &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;};&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;o&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;person1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;createPerson&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Nicholas&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;29&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Software Egineer&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;person2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;createPerson&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Greg&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;27&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Doctor&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h4&gt;2.构造函数模式&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;    &lt;span class="nx"&gt;fucntion&lt;/span&gt; &lt;span class="nx"&gt;Person&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;age&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;job&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;age&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;age&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;job&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;job&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;sayName&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;};&lt;/span&gt;
        &lt;span class="c1"&gt;// 等价 this.sayName = new Function(&amp;quot;console.log(this.name)&amp;quot;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;person1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Person&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Nicholas&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;29&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Software Egineer&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;person2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Person&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Greg&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;27&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Doctor&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;person1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;sayName&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="nx"&gt;person2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;sayName&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;//false, 说明在两个对象中，sayName是不同的对象&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h4&gt;3.原型模式&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;Person&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nx"&gt;Person&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;prototype&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Nicholas&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nx"&gt;Person&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;prototype&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;age&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;29&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nx"&gt;Person&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;prototype&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;job&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Software Engineer&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nx"&gt;Person&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;prototype&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;sayName&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
    &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;person1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Person&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="nx"&gt;person1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;sayName&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;  &lt;span class="c1"&gt;//&amp;quot;Nicholas&amp;quot;&lt;/span&gt;

    &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;person2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Person&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="nx"&gt;person2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;sayName&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;  &lt;span class="c1"&gt;//&amp;quot;Nicholas&amp;quot;&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;person1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;sayName&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="nx"&gt;person2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;sayName&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;//true, 说明在两个对象中，sayName是相同的对象&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h4&gt;4.组合使用构造函数模式和原型模式&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;Person&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;age&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;job&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;age&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;age&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;job&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;job&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;friend&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Shelby&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Court&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nx"&gt;Person&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;prototype&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;constructor&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Person&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nx"&gt;sayName&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;person1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Person&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Nicholas&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;29&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Software Engineer&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;person2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Person&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Greg&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;27&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Doctor&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="nx"&gt;person1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;friend&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;push&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Van&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;person1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;friends&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;   &lt;span class="c1"&gt;//&amp;quot;Shelby, Count, Van&amp;quot;&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;person2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;friends&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;       &lt;span class="c1"&gt;//&amp;quot;Shelby, Count&amp;quot;&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;person1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;friends&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="nx"&gt;person2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;friends&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;   &lt;span class="c1"&gt;//false&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;person2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;sayName&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="nx"&gt;person2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;sayName&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;   &lt;span class="c1"&gt;//true&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h4&gt;5.动态原型模式&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;Person&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;age&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;job&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;age&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;age&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;job&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;job&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;typeof&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;sayName&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;function&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;Person&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;prototype&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;sayName&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;};&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;friend&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Person&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Nicholas&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;29&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Software Engineer&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;friend&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;sayName&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h4&gt;6.寄生构造函数模式&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;Person&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;age&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;job&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;o&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Object&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="nx"&gt;o&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nx"&gt;o&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;age&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;age&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nx"&gt;o&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;job&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;job&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nx"&gt;o&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;sayName&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;};&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;o&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;friend&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Person&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Nicholas&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;29&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Software Engineer&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;friend&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;sayName&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;       &lt;span class="c1"&gt;//&amp;quot;Nicholas&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;blockquote&gt;
&lt;p&gt;构造函数在不返回值的情况下，默认会返回新对象实例
而通过在构造函数的末尾添加一个 &lt;code&gt;return&lt;/code&gt; 语句，可以重写调用构造函数时返回的值。
这种模式可以在行列的情况下用来为对象创建构造函数。
假如想创建一个具有额外方法的特殊数组，由于不能直接修改 &lt;code&gt;Array&lt;/code&gt; 构造函数，可以使用这种模式&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;SpecialArray&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;//创建数组&lt;/span&gt;
    &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;values&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Array&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="c1"&gt;//添加值&lt;/span&gt;
    &lt;span class="nx"&gt;values&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;push&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;apply&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;values&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;arguments&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="c1"&gt;//添加方法&lt;/span&gt;
    &lt;span class="nx"&gt;values&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;toPipedString&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;|&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;};&lt;/span&gt;
    &lt;span class="c1"&gt;//返回数组&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;values&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;colors&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;SpecialArray&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;red&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;blue&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;green&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;colors&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;toPipedString&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt; &lt;span class="c1"&gt;//&amp;quot;red|blue|green&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h4&gt;7.稳妥构造函数模式&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;Person&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;age&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;job&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;o&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Object&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

    &lt;span class="nx"&gt;o&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;sayName&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;};&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;o&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h4&gt;原型链&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;SuperType&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;property&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="c1"&gt;//something else&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nx"&gt;SuperType&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;prototype&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getSuperValue&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;//some codes&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;property&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;SubType&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;//something&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;subproperty&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="c1"&gt;//继承了 SuperType&lt;/span&gt;
&lt;span class="nx"&gt;SubType&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;prototype&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;SuperType&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="nx"&gt;SubType&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;prototype&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getSubValue&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;subproperty&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="c1"&gt;//other codes&lt;/span&gt;
&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;instance&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;SubType&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;instance&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getSuperValue&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;      &lt;span class="c1"&gt;//true&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;img alt="函数继承原型链" src="/images/原型链.png"&gt;&lt;/p&gt;
&lt;h4&gt;原型链继承的问题&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;创建子类型时，原先的超类型实例属性变成了子类的原型属性&lt;/li&gt;
&lt;li&gt;创建子类型时，没有办法在不影响所有对象实例的情况下给超类型的构造函数传递对数&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;继承方法&lt;/h4&gt;
&lt;h5&gt;1. 借用构造函数（伪造对象、经典继承）&lt;/h5&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;SuperType&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;newColor&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;color&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;red&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;blue&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;green&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;SubType() {&lt;/span&gt;
    &lt;span class="c1"&gt;//继承了 SuperType&lt;/span&gt;
    &lt;span class="nx"&gt;SuperType&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;call&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;yellow&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;instance1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;SubType&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="nx"&gt;instance1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;colors&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;push&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;black&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;instance1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;colors&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;  &lt;span class="c1"&gt;//&amp;quot;red,blue,green,yellow,black&amp;quot;&lt;/span&gt;

&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;isntance1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;SubType&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;instance2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;colors&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;  &lt;span class="c1"&gt;//&amp;quot;red,blue,green,yellow&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h5&gt;2. 组合继承（伪经典继承）&lt;/h5&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;SuperType&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;colors&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;red&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;blue&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;green&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nx"&gt;SuperType&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;prototype&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;sayName&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;SubType&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;age&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;//继承属性&lt;/span&gt;
    &lt;span class="nx"&gt;SuperType&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;call&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;age&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;age&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;//继承方法&lt;/span&gt;
&lt;span class="nx"&gt;SubType&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;prototype&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;SuperType&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="nx"&gt;SubType&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;prototype&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;sayAge&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;age&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;instance1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;SubType&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Nicholas&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;29&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;instance1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;colors1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;push&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;black&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;instance1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;colors&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;      &lt;span class="c1"&gt;//&amp;quot;red,blue,green,black&amp;quot;&lt;/span&gt;
&lt;span class="nx"&gt;instance1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;sayName&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;    &lt;span class="c1"&gt;//&amp;quot;Nicholas&amp;quot;&lt;/span&gt;
&lt;span class="nx"&gt;instance&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;sayAge&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;      &lt;span class="c1"&gt;//29&lt;/span&gt;

&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;instance2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;SubType&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Greg&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;27&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;instance2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;colors&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;  &lt;span class="c1"&gt;//&amp;quot;red,blue,green&amp;quot;&lt;/span&gt;
&lt;span class="nx"&gt;instance2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;sayName&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;    &lt;span class="c1"&gt;//&amp;quot;Greg&amp;quot;&lt;/span&gt;
&lt;span class="nx"&gt;instance2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;sayAge&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;     &lt;span class="c1"&gt;//27&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h5&gt;3. 原型式继承&lt;/h5&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;object&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;o&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;F&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{}&lt;/span&gt;
    &lt;span class="nx"&gt;F&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;prototype&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;o&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;F&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;person&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Nicholas&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nx"&gt;friends&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
        &lt;span class="s2"&gt;&amp;quot;Shelby&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s2"&gt;&amp;quot;Court&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s2"&gt;&amp;quot;Van&amp;quot;&lt;/span&gt;
    &lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;anotherPerson&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;object&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;person&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;anotherPerson&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Greg&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nx"&gt;anotherPerson&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;friends&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;push&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Rob&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;yetAnotherPerson&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;object&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;person&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;yetAnotherPerson&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Linda&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nx"&gt;yetAnotherPerson&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;friends&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;push&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Barbie&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;person&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;friends&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;  &lt;span class="c1"&gt;//&amp;quot;Shelby,Court,Van,Rob,Barbie&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;blockquote&gt;
&lt;p&gt;使用 &lt;code&gt;Object.create()&lt;/code&gt; 原型式继承。该函数接受两个参数：一个用作新对象原型的对象和一个（可选的）新对象定义额外属性的对象，覆盖原型卦象上的同名属性&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;使用一个参数&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;person&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Nicholas&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nx"&gt;friends&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
        &lt;span class="s2"&gt;&amp;quot;Shelby&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s2"&gt;&amp;quot;Court&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s2"&gt;&amp;quot;Van&amp;quot;&lt;/span&gt;
    &lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;anotherPerson&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;Object&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;create&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;person&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;anotherPerson&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Greg&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nx"&gt;anotherPerson&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;friends&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;push&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Rob&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;yetAnotherPerson&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;Object&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;create&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;person&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;yetAnotherPerson&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Linda&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nx"&gt;yetAnotherPerson&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;friends&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;push&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Barbie&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;person&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;friends&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;  &lt;span class="c1"&gt;//&amp;quot;Shelby,Court,Van,Rob,Barbie&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;使用两个参数，参数传入方式与 &lt;code&gt;Object.definePrototies()&lt;/code&gt; 相同&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;person&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Nicholas&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nx"&gt;friends&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
        &lt;span class="s2"&gt;&amp;quot;Shelby&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s2"&gt;&amp;quot;Court&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s2"&gt;&amp;quot;Van&amp;quot;&lt;/span&gt;
    &lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;anotherPerson&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;Object&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;create&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;person&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Greg&amp;quot;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;anotherPerson&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;  &lt;span class="c1"&gt;//&amp;quot;Greg&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h5&gt;4. 寄生式继承&lt;/h5&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;createAnother&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;original&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;//通过调用函数创建一个新对象&lt;/span&gt;
    &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;clone&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;Object&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;create&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;original&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="c1"&gt;//以某种方式来增强这个对象&lt;/span&gt;
    &lt;span class="nx"&gt;clone&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;sayHi&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;hi&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;};&lt;/span&gt;
    &lt;span class="c1"&gt;//返回该对象&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;clone&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;person&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Nicholas&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nx"&gt;friends&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
        &lt;span class="s2"&gt;&amp;quot;Shelby&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s2"&gt;&amp;quot;Court&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s2"&gt;&amp;quot;Van&amp;quot;&lt;/span&gt;
    &lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;anotherPerson&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;createAnother&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;person&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;anotherPerson&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;sayHi&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;  &lt;span class="c1"&gt;//&amp;quot;hi&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h5&gt;5. 寄生组合式继承&lt;/h5&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;inheritPrototype&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;subType&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;superType&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;//创建对象&lt;/span&gt;
    &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;prototype&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;Object&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;create&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;superType&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;prototype&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="c1"&gt;//增强对象&lt;/span&gt;
    &lt;span class="nx"&gt;prototype&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;constructor&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;subType&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="c1"&gt;//指定对象&lt;/span&gt;
    &lt;span class="nx"&gt;subType&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;prototype&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;prototype&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;SuperType&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;colors&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;red&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;blue&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;green&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nx"&gt;SuperType&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;prototype&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;sayName&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;SubType&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;age&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;SuperType&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;call&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;age&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;age&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nx"&gt;inheritPrototype&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;SubType&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;SuperType&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;SubType&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;prototype&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;sayAge&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;age&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;instance&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;SubType&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Nicholas&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;29&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;img alt="寄生组合式继承" src="/images/寄生组合式继承.png"&gt;&lt;/p&gt;</content><category term="JavaScript"></category><category term="原型"></category></entry><entry><title>经典编程书籍大全</title><link href="http://ivicel.github.io/jing-dian-bian-cheng-shu-ji-da-quan.html" rel="alternate"></link><published>2017-02-23T00:00:00+08:00</published><updated>2017-02-23T00:00:00+08:00</updated><author><name>ivicel</name></author><id>tag:ivicel.github.io,2017-02-23:/jing-dian-bian-cheng-shu-ji-da-quan.html</id><summary type="html">&lt;p&gt;100+ 经典技术书籍，涵盖：计算机系统与网络、系统架构、算法与数据结构、前端开发、后端开发、移动开发、数据库、测试、项目与团队、程序员职业修炼、求职面试 和 编程相关的经典书籍。&lt;/p&gt;
&lt;p&gt;这个列表综合了伯乐在线网站以往推荐&lt;a href="http://blog.jobbole.com/tag/book/"&gt;经典书籍&lt;/a&gt;文章中的列表，以及在微信和微博中被广泛推荐的好书。虽然已经包括了100多本，覆盖的面也比较全。仍然有很多方面需要补充，而且相信还有很多没有被收录的好书。欢迎大家在 issues 中推荐或自荐。&lt;/p&gt;
&lt;h2&gt;计算机系统与网络&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;《&lt;a href="https://www.amazon.cn/gp/product/B00AAQXKXS/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;amp;amp;camp=536&amp;amp;amp;creative=3200&amp;amp;amp;creativeASIN=B00AAQXKXS&amp;amp;amp;linkCode=as2&amp;amp;amp;tag=vastwork-23"&gt;图灵的秘密:他的生平、思想及论文解读&lt;/a&gt;》&lt;/li&gt;
&lt;li&gt;《&lt;a href="https://www.amazon.cn/gp/product/B0011F9OQE/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;amp;amp;camp=536&amp;amp;amp;creative=3200&amp;amp;amp;creativeASIN=B0011F9OQE&amp;amp;amp;linkCode=as2&amp;amp;amp;tag=vastwork-23"&gt;计算机系统概论&lt;/a&gt;》&lt;/li&gt;
&lt;li&gt;《&lt;a href="https://www.amazon.cn/gp/product/B0011F5RYM/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;amp;amp;camp=536&amp;amp;amp;creative=3200&amp;amp;amp;creativeASIN=B0011F5RYM&amp;amp;amp;linkCode=as2&amp;amp;amp;tag=vastwork-23"&gt;深入理解Linux内核&lt;/a&gt;》&lt;/li&gt;
&lt;li&gt;《&lt;a href="https://www.amazon.cn/gp/product/B003QN7J7U/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;amp;amp;camp=536&amp;amp;amp;creative=3200&amp;amp;amp;creativeASIN=B003QN7J7U&amp;amp;amp;linkCode=as2&amp;amp;amp;tag=vastwork-23"&gt;深入Linux内核架构&lt;/a&gt;》&lt;/li&gt;
&lt;li&gt;《&lt;a href="https://www.amazon.cn/gp/product/B00116OTVS/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;amp;amp;camp=536&amp;amp;amp;creative=3200&amp;amp;amp;creativeASIN=B00116OTVS&amp;amp;amp;linkCode=as2&amp;amp;amp;tag=vastwork-23"&gt;TCP/IP详解 卷1：协议&lt;/a&gt;》&lt;/li&gt;
&lt;li&gt;《&lt;a href="https://www.amazon.cn/gp/product/B00JUM2ML4/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;amp;amp;camp=536&amp;amp;amp;creative=3200&amp;amp;amp;creativeASIN=B00JUM2ML4&amp;amp;amp;linkCode=as2&amp;amp;amp;tag=vastwork-23"&gt;Linux系统编程（第2版）&lt;/a&gt;》&lt;/li&gt;
&lt;li&gt;《&lt;a href="https://www.amazon.cn/gp/product/B004X3Z3D4/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;amp;amp;camp=536&amp;amp;amp;creative=3200&amp;amp;amp;creativeASIN=B004X3Z3D4&amp;amp;amp;linkCode=as2&amp;amp;amp;tag=vastwork-23"&gt;Linux内核设计与实现（第3版）&lt;/a&gt;》&lt;/li&gt;
&lt;li&gt;《&lt;a href="https://www.amazon.cn/gp/product/B004BJ18KM/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;amp;amp;camp=536&amp;amp;amp;creative=3200&amp;amp;amp;creativeASIN=B004BJ18KM&amp;amp;amp;linkCode=as2&amp;amp;amp;tag=vastwork-23"&gt;深入理解计算机系统（原书第2版）&lt;/a&gt;》&lt;/li&gt;
&lt;li&gt;《&lt;a href="https://www.amazon.cn/gp/product/B0011AP7RY/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;amp;amp;camp=536&amp;amp;amp;creative=3200&amp;amp;amp;creativeASIN=B0011AP7RY&amp;amp;amp;linkCode=as2&amp;amp;amp;tag=vastwork-23"&gt;计算机程序的构造和解释（原书第2版）&lt;/a&gt;》&lt;/li&gt;
&lt;li&gt;《&lt;a href="https://www.amazon.cn/gp/product/B009RSXIB4/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;amp;amp;camp=536&amp;amp;amp;creative=3200&amp;amp;amp;creativeASIN=B009RSXIB4&amp;amp;amp;linkCode=as2&amp;amp;amp;tag=vastwork-23"&gt;编码：隐匿在计算机软硬件背后的语言&lt;/a&gt;》&lt;/li&gt;
&lt;li&gt;《&lt;a href="https://www.amazon.cn/gp/product/B0140I5WPK/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;amp;amp;camp=536&amp;amp;amp;creative=3200&amp;amp;amp;creativeASIN=B0140I5WPK&amp;amp;amp;linkCode=as2&amp;amp;amp;tag=vastwork-23"&gt;性能之颠：洞悉系统 …&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;</summary><content type="html">&lt;p&gt;100+ 经典技术书籍，涵盖：计算机系统与网络、系统架构、算法与数据结构、前端开发、后端开发、移动开发、数据库、测试、项目与团队、程序员职业修炼、求职面试 和 编程相关的经典书籍。&lt;/p&gt;
&lt;p&gt;这个列表综合了伯乐在线网站以往推荐&lt;a href="http://blog.jobbole.com/tag/book/"&gt;经典书籍&lt;/a&gt;文章中的列表，以及在微信和微博中被广泛推荐的好书。虽然已经包括了100多本，覆盖的面也比较全。仍然有很多方面需要补充，而且相信还有很多没有被收录的好书。欢迎大家在 issues 中推荐或自荐。&lt;/p&gt;
&lt;h2&gt;计算机系统与网络&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;《&lt;a href="https://www.amazon.cn/gp/product/B00AAQXKXS/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;amp;amp;camp=536&amp;amp;amp;creative=3200&amp;amp;amp;creativeASIN=B00AAQXKXS&amp;amp;amp;linkCode=as2&amp;amp;amp;tag=vastwork-23"&gt;图灵的秘密:他的生平、思想及论文解读&lt;/a&gt;》&lt;/li&gt;
&lt;li&gt;《&lt;a href="https://www.amazon.cn/gp/product/B0011F9OQE/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;amp;amp;camp=536&amp;amp;amp;creative=3200&amp;amp;amp;creativeASIN=B0011F9OQE&amp;amp;amp;linkCode=as2&amp;amp;amp;tag=vastwork-23"&gt;计算机系统概论&lt;/a&gt;》&lt;/li&gt;
&lt;li&gt;《&lt;a href="https://www.amazon.cn/gp/product/B0011F5RYM/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;amp;amp;camp=536&amp;amp;amp;creative=3200&amp;amp;amp;creativeASIN=B0011F5RYM&amp;amp;amp;linkCode=as2&amp;amp;amp;tag=vastwork-23"&gt;深入理解Linux内核&lt;/a&gt;》&lt;/li&gt;
&lt;li&gt;《&lt;a href="https://www.amazon.cn/gp/product/B003QN7J7U/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;amp;amp;camp=536&amp;amp;amp;creative=3200&amp;amp;amp;creativeASIN=B003QN7J7U&amp;amp;amp;linkCode=as2&amp;amp;amp;tag=vastwork-23"&gt;深入Linux内核架构&lt;/a&gt;》&lt;/li&gt;
&lt;li&gt;《&lt;a href="https://www.amazon.cn/gp/product/B00116OTVS/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;amp;amp;camp=536&amp;amp;amp;creative=3200&amp;amp;amp;creativeASIN=B00116OTVS&amp;amp;amp;linkCode=as2&amp;amp;amp;tag=vastwork-23"&gt;TCP/IP详解 卷1：协议&lt;/a&gt;》&lt;/li&gt;
&lt;li&gt;《&lt;a href="https://www.amazon.cn/gp/product/B00JUM2ML4/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;amp;amp;camp=536&amp;amp;amp;creative=3200&amp;amp;amp;creativeASIN=B00JUM2ML4&amp;amp;amp;linkCode=as2&amp;amp;amp;tag=vastwork-23"&gt;Linux系统编程（第2版）&lt;/a&gt;》&lt;/li&gt;
&lt;li&gt;《&lt;a href="https://www.amazon.cn/gp/product/B004X3Z3D4/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;amp;amp;camp=536&amp;amp;amp;creative=3200&amp;amp;amp;creativeASIN=B004X3Z3D4&amp;amp;amp;linkCode=as2&amp;amp;amp;tag=vastwork-23"&gt;Linux内核设计与实现（第3版）&lt;/a&gt;》&lt;/li&gt;
&lt;li&gt;《&lt;a href="https://www.amazon.cn/gp/product/B004BJ18KM/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;amp;amp;camp=536&amp;amp;amp;creative=3200&amp;amp;amp;creativeASIN=B004BJ18KM&amp;amp;amp;linkCode=as2&amp;amp;amp;tag=vastwork-23"&gt;深入理解计算机系统（原书第2版）&lt;/a&gt;》&lt;/li&gt;
&lt;li&gt;《&lt;a href="https://www.amazon.cn/gp/product/B0011AP7RY/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;amp;amp;camp=536&amp;amp;amp;creative=3200&amp;amp;amp;creativeASIN=B0011AP7RY&amp;amp;amp;linkCode=as2&amp;amp;amp;tag=vastwork-23"&gt;计算机程序的构造和解释（原书第2版）&lt;/a&gt;》&lt;/li&gt;
&lt;li&gt;《&lt;a href="https://www.amazon.cn/gp/product/B009RSXIB4/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;amp;amp;camp=536&amp;amp;amp;creative=3200&amp;amp;amp;creativeASIN=B009RSXIB4&amp;amp;amp;linkCode=as2&amp;amp;amp;tag=vastwork-23"&gt;编码：隐匿在计算机软硬件背后的语言&lt;/a&gt;》&lt;/li&gt;
&lt;li&gt;《&lt;a href="https://www.amazon.cn/gp/product/B0140I5WPK/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;amp;amp;camp=536&amp;amp;amp;creative=3200&amp;amp;amp;creativeASIN=B0140I5WPK&amp;amp;amp;linkCode=as2&amp;amp;amp;tag=vastwork-23"&gt;性能之颠：洞悉系统、企业与云计算&lt;/a&gt;》&lt;/li&gt;
&lt;li&gt;《&lt;a href="https://www.amazon.cn/gp/product/B011S72JB6/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;amp;amp;camp=536&amp;amp;amp;creative=3200&amp;amp;amp;creativeASIN=B011S72JB6&amp;amp;amp;linkCode=as2&amp;amp;amp;tag=vastwork-23"&gt;UNIX网络编程 卷1：套接字联网API（第3版）&lt;/a&gt;》&lt;/li&gt;
&lt;li&gt;《&lt;a href="https://www.amazon.cn/gp/product/B012R5A29O/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;amp;amp;camp=536&amp;amp;amp;creative=3200&amp;amp;amp;creativeASIN=B012R5A29O&amp;amp;amp;linkCode=as2&amp;amp;amp;tag=vastwork-23"&gt;UNIX网络编程 卷2：进程间通信&lt;/a&gt;》&lt;/li&gt;
&lt;li&gt;《&lt;a href="https://www.amazon.cn/gp/product/B001GS7918/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;amp;amp;camp=536&amp;amp;amp;creative=3200&amp;amp;amp;creativeASIN=B001GS7918&amp;amp;amp;linkCode=as2&amp;amp;amp;tag=vastwork-23"&gt;Windows核心编程(第5版)&lt;/a&gt;》&lt;/li&gt;
&lt;li&gt;《&lt;a href="https://www.amazon.cn/gp/product/B00PB5QQ84/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;amp;amp;camp=536&amp;amp;amp;creative=3200&amp;amp;amp;creativeASIN=B00PB5QQ84&amp;amp;amp;linkCode=as2&amp;amp;amp;tag=vastwork-23"&gt;WireShark网络分析就这么简单&lt;/a&gt;》&lt;/li&gt;
&lt;li&gt;《&lt;a href="https://www.amazon.cn/gp/product/B01AS1OS8A/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;amp;amp;camp=536&amp;amp;amp;creative=3200&amp;amp;amp;creativeASIN=B01AS1OS8A&amp;amp;amp;linkCode=as2&amp;amp;amp;tag=vastwork-23"&gt;WireShark网络分析的艺术&lt;/a&gt;》&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;编程通用&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;《&lt;a href="https://www.amazon.cn/gp/product/B006P7V73G/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;amp;amp;camp=536&amp;amp;amp;creative=3200&amp;amp;amp;creativeASIN=B006P7V73G&amp;amp;amp;linkCode=as2&amp;amp;amp;tag=vastwork-23"&gt;编程原本&lt;/a&gt;》&lt;/li&gt;
&lt;li&gt;《&lt;a href="https://www.amazon.cn/gp/product/B0061XKRXA/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;amp;amp;camp=536&amp;amp;amp;creative=3200&amp;amp;amp;creativeASIN=B0061XKRXA&amp;amp;amp;linkCode=as2&amp;amp;amp;tag=vastwork-23"&gt;代码大全&lt;/a&gt;》&lt;/li&gt;
&lt;li&gt;《&lt;a href="https://www.amazon.cn/gp/product/B008Z1IEQ8/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;amp;amp;camp=536&amp;amp;amp;creative=3200&amp;amp;amp;creativeASIN=B008Z1IEQ8&amp;amp;amp;linkCode=as2&amp;amp;amp;tag=vastwork-23"&gt;UNIX编程艺术&lt;/a&gt;》&lt;/li&gt;
&lt;li&gt;《&lt;a href="https://www.amazon.cn/gp/product/B0031M9GHC/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;amp;amp;camp=536&amp;amp;amp;creative=3200&amp;amp;amp;creativeASIN=B0031M9GHC&amp;amp;amp;linkCode=as2&amp;amp;amp;tag=vastwork-23"&gt;代码整洁之道&lt;/a&gt;》&lt;/li&gt;
&lt;li&gt;《&lt;a href="https://www.amazon.cn/gp/product/B00SFZH0DC/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;amp;amp;camp=536&amp;amp;amp;creative=3200&amp;amp;amp;creativeASIN=B00SFZH0DC&amp;amp;amp;linkCode=as2&amp;amp;amp;tag=vastwork-23"&gt;编程珠玑（第2版）&lt;/a&gt;》&lt;/li&gt;
&lt;li&gt;《&lt;a href="https://www.amazon.cn/gp/product/B0150BMQDM/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;amp;amp;camp=536&amp;amp;amp;creative=3200&amp;amp;amp;creativeASIN=B0150BMQDM&amp;amp;amp;linkCode=as2&amp;amp;amp;tag=vastwork-23"&gt;编程珠玑（续）&lt;/a&gt;》&lt;/li&gt;
&lt;li&gt;《&lt;a href="https://www.amazon.cn/gp/product/B00IOAM6VE/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;amp;amp;camp=536&amp;amp;amp;creative=3200&amp;amp;amp;creativeASIN=B00IOAM6VE&amp;amp;amp;linkCode=as2&amp;amp;amp;tag=vastwork-23"&gt;软件调试的艺术&lt;/a&gt;》&lt;/li&gt;
&lt;li&gt;《&lt;a href="https://www.amazon.cn/gp/product/B00KMJ2Q1U/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;amp;amp;camp=536&amp;amp;amp;creative=3200&amp;amp;amp;creativeASIN=B00KMJ2Q1U&amp;amp;amp;linkCode=as2&amp;amp;amp;tag=vastwork-23"&gt;修改代码的艺术&lt;/a&gt;》&lt;/li&gt;
&lt;li&gt;《&lt;a href="https://www.amazon.cn/gp/product/B007HYMPBY/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;amp;amp;camp=536&amp;amp;amp;creative=3200&amp;amp;amp;creativeASIN=B007HYMPBY&amp;amp;amp;linkCode=as2&amp;amp;amp;tag=vastwork-23"&gt;编程语言实现模式&lt;/a&gt;》&lt;/li&gt;
&lt;li&gt;《&lt;a href="https://www.amazon.cn/gp/product/B008B4DTG4/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;amp;amp;camp=536&amp;amp;amp;creative=3200&amp;amp;amp;creativeASIN=B008B4DTG4&amp;amp;amp;linkCode=as2&amp;amp;amp;tag=vastwork-23"&gt;编写可读代码的艺术&lt;/a&gt;》&lt;/li&gt;
&lt;li&gt;《解析极限编程：拥抱变化》&lt;/li&gt;
&lt;li&gt;《&lt;a href="https://www.amazon.cn/gp/product/B008UCHA58/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;amp;amp;camp=536&amp;amp;amp;creative=3200&amp;amp;amp;creativeASIN=B008UCHA58&amp;amp;amp;linkCode=as2&amp;amp;amp;tag=vastwork-23"&gt;精通正则表达式（第3版）&lt;/a&gt;》&lt;/li&gt;
&lt;li&gt;《&lt;a href="https://www.amazon.cn/gp/product/B001NGO85I/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;amp;amp;camp=536&amp;amp;amp;creative=3200&amp;amp;amp;creativeASIN=B001NGO85I&amp;amp;amp;linkCode=as2&amp;amp;amp;tag=vastwork-23"&gt;编译原理（第2版）&lt;/a&gt;》龙书&lt;/li&gt;
&lt;li&gt;《&lt;a href="https://www.amazon.cn/gp/product/B011LPUB42/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;amp;amp;camp=536&amp;amp;amp;creative=3200&amp;amp;amp;creativeASIN=B011LPUB42&amp;amp;amp;linkCode=as2&amp;amp;amp;tag=vastwork-23"&gt;重构：改善既有代码的设计&lt;/a&gt;》&lt;/li&gt;
&lt;li&gt;《&lt;a href="https://www.amazon.cn/gp/product/B00ALPRM3M/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;amp;amp;camp=536&amp;amp;amp;creative=3200&amp;amp;amp;creativeASIN=B00ALPRM3M&amp;amp;amp;linkCode=as2&amp;amp;amp;tag=vastwork-23"&gt;七周七语言：理解多种编程范型&lt;/a&gt;》&lt;/li&gt;
&lt;li&gt;《&lt;a href="https://www.amazon.cn/gp/product/B00CBBLUFK/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;amp;amp;camp=536&amp;amp;amp;creative=3200&amp;amp;amp;creativeASIN=B00CBBLUFK&amp;amp;amp;linkCode=as2&amp;amp;amp;tag=vastwork-23"&gt;调试九法：软硬件错误的排查之道&lt;/a&gt;》&lt;/li&gt;
&lt;li&gt;《程序设计语言：实践之路（第3版）》&lt;/li&gt;
&lt;li&gt;《&lt;a href="https://www.amazon.cn/gp/product/B00PG0MM3C/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;amp;amp;camp=536&amp;amp;amp;creative=3200&amp;amp;amp;creativeASIN=B00PG0MM3C&amp;amp;amp;linkCode=as2&amp;amp;amp;tag=vastwork-23"&gt;计算的本质：深入剖析程序和计算机&lt;/a&gt;》&lt;/li&gt;
&lt;li&gt;《&lt;a href="https://www.amazon.cn/gp/product/B001130JN8/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;amp;amp;camp=536&amp;amp;amp;creative=3200&amp;amp;amp;creativeASIN=B001130JN8&amp;amp;amp;linkCode=as2&amp;amp;amp;tag=vastwork-23"&gt;设计模式 : 可复用面向对象软件的基础&lt;/a&gt;》&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;算法与数据结构&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;《&lt;a href="https://www.amazon.cn/gp/product/B009OCFQ0O/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;amp;amp;camp=536&amp;amp;amp;creative=3200&amp;amp;amp;creativeASIN=B009OCFQ0O&amp;amp;amp;linkCode=as2&amp;amp;amp;tag=vastwork-23"&gt;算法（第4版）&lt;/a&gt;》&lt;/li&gt;
&lt;li&gt;《&lt;a href="https://www.amazon.cn/gp/product/B00AK7BYJY/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;amp;amp;camp=536&amp;amp;amp;creative=3200&amp;amp;amp;creativeASIN=B00AK7BYJY&amp;amp;amp;linkCode=as2&amp;amp;amp;tag=vastwork-23"&gt;算法导论（原书第2版）&lt;/a&gt;》&lt;/li&gt;
&lt;li&gt;《&lt;a href="https://www.amazon.cn/gp/product/B019NB0VCI/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;amp;amp;camp=536&amp;amp;amp;creative=3200&amp;amp;amp;creativeASIN=B019NB0VCI&amp;amp;amp;linkCode=as2&amp;amp;amp;tag=vastwork-23"&gt;Python算法教程&lt;/a&gt;》&lt;/li&gt;
&lt;li&gt;《&lt;a href="https://www.amazon.cn/gp/product/B00S4HCQUI/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;amp;amp;camp=536&amp;amp;amp;creative=3200&amp;amp;amp;creativeASIN=B00S4HCQUI&amp;amp;amp;linkCode=as2&amp;amp;amp;tag=vastwork-23"&gt;算法设计与分析基础（第3版）&lt;/a&gt;》&lt;/li&gt;
&lt;li&gt;《&lt;a href="https://www.amazon.cn/gp/product/B016DWSF8M/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;amp;amp;camp=536&amp;amp;amp;creative=3200&amp;amp;amp;creativeASIN=B016DWSF8M&amp;amp;amp;linkCode=as2&amp;amp;amp;tag=vastwork-23"&gt;学习 JavaScript 数据结构与算法&lt;/a&gt;》&lt;/li&gt;
&lt;li&gt;《&lt;a href="https://www.amazon.cn/gp/product/B01LDG2DSG/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;amp;amp;camp=536&amp;amp;amp;creative=3200&amp;amp;amp;creativeASIN=B01LDG2DSG&amp;amp;amp;linkCode=as2&amp;amp;amp;tag=vastwork-23"&gt;数据结构与算法分析 : C++描述（第4版）&lt;/a&gt;》&lt;/li&gt;
&lt;li&gt;《&lt;a href="https://www.amazon.cn/gp/product/B002WC7NGS/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;amp;amp;camp=536&amp;amp;amp;creative=3200&amp;amp;amp;creativeASIN=B002WC7NGS&amp;amp;amp;linkCode=as2&amp;amp;amp;tag=vastwork-23"&gt;数据结构与算法分析 : C语言描述（第2版）&lt;/a&gt;》&lt;/li&gt;
&lt;li&gt;《&lt;a href="https://www.amazon.cn/gp/product/B01CNP0CG6/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;amp;amp;camp=536&amp;amp;amp;creative=3200&amp;amp;amp;creativeASIN=B01CNP0CG6&amp;amp;amp;linkCode=as2&amp;amp;amp;tag=vastwork-23"&gt;数据结构与算法分析 : Java语言描述（第2版）&lt;/a&gt;》&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;职业修炼与规划&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;《&lt;a href="https://www.amazon.cn/gp/product/B00KQDTZ4S/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;amp;amp;camp=536&amp;amp;amp;creative=3200&amp;amp;amp;creativeASIN=B00KQDTZ4S&amp;amp;amp;linkCode=as2&amp;amp;amp;tag=vastwork-23"&gt;大教堂与集市&lt;/a&gt;》&lt;/li&gt;
&lt;li&gt;《卓有成效的程序员》&lt;/li&gt;
&lt;li&gt;《&lt;a href="https://www.amazon.cn/gp/product/B01LZJ8L9J/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;amp;amp;camp=536&amp;amp;amp;creative=3200&amp;amp;amp;creativeASIN=B01LZJ8L9J&amp;amp;amp;linkCode=as2&amp;amp;amp;tag=vastwork-23"&gt;程序员的职业素养&lt;/a&gt;》&lt;/li&gt;
&lt;li&gt;《&lt;a href="https://www.amazon.cn/gp/product/B004GV08CY/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;amp;amp;camp=536&amp;amp;amp;creative=3200&amp;amp;amp;creativeASIN=B004GV08CY&amp;amp;amp;linkCode=as2&amp;amp;amp;tag=vastwork-23"&gt;程序员修炼之道：从小工到专家&lt;/a&gt;》&lt;/li&gt;
&lt;li&gt;《&lt;a href="https://www.amazon.cn/gp/product/B00H6X6LD4/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;amp;amp;camp=536&amp;amp;amp;creative=3200&amp;amp;amp;creativeASIN=B00H6X6LD4&amp;amp;amp;linkCode=as2&amp;amp;amp;tag=vastwork-23"&gt;软件开发者路线图：从学徒到高手&lt;/a&gt;》&lt;/li&gt;
&lt;li&gt;《&lt;a href="https://www.amazon.cn/gp/product/B00CBBKDGM/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;amp;amp;camp=536&amp;amp;amp;creative=3200&amp;amp;amp;creativeASIN=B00CBBKDGM&amp;amp;amp;linkCode=as2&amp;amp;amp;tag=vastwork-23"&gt;我编程，我快乐: 程序员职业规划之道&lt;/a&gt;》&lt;/li&gt;
&lt;li&gt;《&lt;a href="https://www.amazon.cn/gp/product/B007VARUIM/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;amp;amp;camp=536&amp;amp;amp;creative=3200&amp;amp;amp;creativeASIN=B007VARUIM&amp;amp;amp;linkCode=as2&amp;amp;amp;tag=vastwork-23"&gt;程序员的思维修炼：开发认知潜能的九堂课&lt;/a&gt;》&lt;/li&gt;
&lt;li&gt;《&lt;a href="https://www.amazon.cn/gp/product/B00OA9L3NU/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;amp;amp;camp=536&amp;amp;amp;creative=3200&amp;amp;amp;creativeASIN=B00OA9L3NU&amp;amp;amp;linkCode=as2&amp;amp;amp;tag=vastwork-23"&gt;高效程序员的45个习惯：敏捷开发修炼之道(修订版)&lt;/a&gt;》&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;大师访谈&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;《&lt;a href="https://www.amazon.cn/gp/product/B00451BP72/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;amp;amp;camp=536&amp;amp;amp;creative=3200&amp;amp;amp;creativeASIN=B00451BP72&amp;amp;amp;linkCode=as2&amp;amp;amp;tag=vastwork-23"&gt;编程大师智慧&lt;/a&gt;》&lt;/li&gt;
&lt;li&gt;《&lt;a href="https://www.amazon.cn/gp/product/B00ALPRKMA/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;amp;amp;camp=536&amp;amp;amp;creative=3200&amp;amp;amp;creativeASIN=B00ALPRKMA&amp;amp;amp;linkCode=as2&amp;amp;amp;tag=vastwork-23"&gt;编程大师访谈录&lt;/a&gt;》&lt;/li&gt;
&lt;li&gt;《&lt;a href="https://www.amazon.cn/gp/product/B00QA7GA2Y/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;amp;amp;camp=536&amp;amp;amp;creative=3200&amp;amp;amp;creativeASIN=B00QA7GA2Y&amp;amp;amp;linkCode=as2&amp;amp;amp;tag=vastwork-23"&gt;编程人生 : 15位软件先驱访谈录&lt;/a&gt;》&lt;/li&gt;
&lt;li&gt;《&lt;a href="https://www.amazon.cn/gp/product/B007ED88CI/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;amp;amp;camp=536&amp;amp;amp;creative=3200&amp;amp;amp;creativeASIN=B007ED88CI&amp;amp;amp;linkCode=as2&amp;amp;amp;tag=vastwork-23"&gt;奇思妙想 : 15位计算机天才及其重大发现&lt;/a&gt;》&lt;/li&gt;
&lt;li&gt;《&lt;a href="https://www.amazon.cn/gp/product/B008G80O9K/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;amp;amp;camp=536&amp;amp;amp;creative=3200&amp;amp;amp;creativeASIN=B008G80O9K&amp;amp;amp;linkCode=as2&amp;amp;amp;tag=vastwork-23"&gt;图灵和ACM图灵奖&lt;/a&gt;》&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;架构/性能&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;《&lt;a href="https://www.amazon.cn/gp/product/B01ER75V6O/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;amp;amp;camp=536&amp;amp;amp;creative=3200&amp;amp;amp;creativeASIN=B01ER75V6O&amp;amp;amp;linkCode=as2&amp;amp;amp;tag=vastwork-23"&gt;微服务设计&lt;/a&gt;》&lt;/li&gt;
&lt;li&gt;《&lt;a href="https://www.amazon.cn/gp/product/B00NGW4EAG/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;amp;amp;camp=536&amp;amp;amp;creative=3200&amp;amp;amp;creativeASIN=B00NGW4EAG&amp;amp;amp;linkCode=as2&amp;amp;amp;tag=vastwork-23"&gt;大数据日知录&lt;/a&gt;》&lt;/li&gt;
&lt;li&gt;《&lt;a href="https://www.amazon.cn/gp/product/B003LBSRDM/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;amp;amp;camp=536&amp;amp;amp;creative=3200&amp;amp;amp;creativeASIN=B003LBSRDM&amp;amp;amp;linkCode=as2&amp;amp;amp;tag=vastwork-23"&gt;企业应用架构模式&lt;/a&gt;》&lt;/li&gt;
&lt;li&gt;《&lt;a href="https://www.amazon.cn/gp/product/B00JMKWHFU/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;amp;amp;camp=536&amp;amp;amp;creative=3200&amp;amp;amp;creativeASIN=B00JMKWHFU&amp;amp;amp;linkCode=as2&amp;amp;amp;tag=vastwork-23"&gt;Web性能权威指南&lt;/a&gt;》&lt;/li&gt;
&lt;li&gt;《&lt;a href="https://www.amazon.cn/gp/product/B01M0EHQ43/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;amp;amp;camp=536&amp;amp;amp;creative=3200&amp;amp;amp;creativeASIN=B01M0EHQ43&amp;amp;amp;linkCode=as2&amp;amp;amp;tag=vastwork-23"&gt;SRE：Google运维解密&lt;/a&gt;》&lt;/li&gt;
&lt;li&gt;《&lt;a href="https://www.amazon.cn/gp/product/B0153178XM/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;amp;amp;camp=536&amp;amp;amp;creative=3200&amp;amp;amp;creativeASIN=B0153178XM&amp;amp;amp;linkCode=as2&amp;amp;amp;tag=vastwork-23"&gt;发布！软件的设计与部署&lt;/a&gt;》&lt;/li&gt;
&lt;li&gt;《&lt;a href="https://www.amazon.cn/gp/product/B01HZFHQQI/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;amp;amp;camp=536&amp;amp;amp;creative=3200&amp;amp;amp;creativeASIN=B01HZFHQQI&amp;amp;amp;linkCode=as2&amp;amp;amp;tag=vastwork-23"&gt;高扩展性网站的 50 条原则&lt;/a&gt;》&lt;/li&gt;
&lt;li&gt;《&lt;a href="https://www.amazon.cn/gp/product/B00F3Z26G8/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;amp;amp;camp=536&amp;amp;amp;creative=3200&amp;amp;amp;creativeASIN=B00F3Z26G8&amp;amp;amp;linkCode=as2&amp;amp;amp;tag=vastwork-23"&gt;大型网站技术架构:核心原理与案例分析&lt;/a&gt;》&lt;/li&gt;
&lt;li&gt;《&lt;a href="https://www.amazon.cn/gp/product/B00EP6TGAU/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;amp;amp;camp=536&amp;amp;amp;creative=3200&amp;amp;amp;creativeASIN=B00EP6TGAU&amp;amp;amp;linkCode=as2&amp;amp;amp;tag=vastwork-23"&gt;恰如其分的软件架构：风险驱动的设计方法&lt;/a&gt;》&lt;/li&gt;
&lt;li&gt;《&lt;a href="https://www.amazon.cn/gp/product/B00CMMUXC4/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;amp;amp;camp=536&amp;amp;amp;creative=3200&amp;amp;amp;creativeASIN=B00CMMUXC4&amp;amp;amp;linkCode=as2&amp;amp;amp;tag=vastwork-23"&gt;软件系统架构：使用视点和视角与利益相关者合作（第2版）&lt;/a&gt;》&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Web前端&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;《&lt;a href="https://www.amazon.cn/gp/product/B013SGB2AO/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;amp;amp;camp=536&amp;amp;amp;creative=3200&amp;amp;amp;creativeASIN=B013SGB2AO&amp;amp;amp;linkCode=as2&amp;amp;amp;tag=vastwork-23"&gt;高性能 JavaScript&lt;/a&gt;》&lt;/li&gt;
&lt;li&gt;《&lt;a href="https://www.amazon.cn/gp/product/B0089TDFNS/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;amp;amp;camp=536&amp;amp;amp;creative=3200&amp;amp;amp;creativeASIN=B0089TDFNS&amp;amp;amp;linkCode=as2&amp;amp;amp;tag=vastwork-23"&gt;锋利的 jQuery（第2版）&lt;/a&gt;》&lt;/li&gt;
&lt;li&gt;《&lt;a href="https://www.amazon.cn/gp/product/B016DWSEWO/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;amp;amp;camp=536&amp;amp;amp;creative=3200&amp;amp;amp;creativeASIN=B016DWSEWO&amp;amp;amp;linkCode=as2&amp;amp;amp;tag=vastwork-23"&gt;JavaScript 忍者秘籍&lt;/a&gt;》（感谢&lt;a href="https://github.com/jobbole/awesome-programming-books/issues?q=is%3Aissue+is%3Aopen+author%3Ajoker-danta"&gt;@joker-danta&lt;/a&gt; 补充推荐）&lt;/li&gt;
&lt;li&gt;《&lt;a href="https://www.amazon.cn/gp/product/B00BQ7RMW0/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;amp;amp;camp=536&amp;amp;amp;creative=3200&amp;amp;amp;creativeASIN=B00BQ7RMW0&amp;amp;amp;linkCode=as2&amp;amp;amp;tag=vastwork-23"&gt;编写可维护的 JavaScript&lt;/a&gt;》&lt;/li&gt;
&lt;li&gt;《&lt;a href="https://www.amazon.cn/gp/product/B00W34DZ8K/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;amp;amp;camp=536&amp;amp;amp;creative=3200&amp;amp;amp;creativeASIN=B00W34DZ8K&amp;amp;amp;linkCode=as2&amp;amp;amp;tag=vastwork-23"&gt;你不知道的 JavaScript（上）&lt;/a&gt;》&lt;/li&gt;
&lt;li&gt;《&lt;a href="https://www.amazon.cn/gp/product/B007VISQ1Y/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;amp;amp;camp=536&amp;amp;amp;creative=3200&amp;amp;amp;creativeASIN=B007VISQ1Y&amp;amp;amp;linkCode=as2&amp;amp;amp;tag=vastwork-23"&gt;JavaScript 权威指南（第6版）&lt;/a&gt;》&lt;/li&gt;
&lt;li&gt;《&lt;a href="https://www.amazon.cn/gp/product/B0097CON2S/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;amp;amp;camp=536&amp;amp;amp;creative=3200&amp;amp;amp;creativeASIN=B0097CON2S&amp;amp;amp;linkCode=as2&amp;amp;amp;tag=vastwork-23"&gt;JavaScript 语言精粹（修订版）&lt;/a&gt;》&lt;/li&gt;
&lt;li&gt;《&lt;a href="https://www.amazon.cn/gp/product/B004VJM5KE/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;amp;amp;camp=536&amp;amp;amp;creative=3200&amp;amp;amp;creativeASIN=B004VJM5KE&amp;amp;amp;linkCode=as2&amp;amp;amp;tag=vastwork-23"&gt;JavaScript DOM编程艺术 （第2版）&lt;/a&gt;》&lt;/li&gt;
&lt;li&gt;《&lt;a href="https://www.amazon.cn/gp/product/B007OQQVMY/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;amp;amp;camp=536&amp;amp;amp;creative=3200&amp;amp;amp;creativeASIN=B007OQQVMY&amp;amp;amp;linkCode=as2&amp;amp;amp;tag=vastwork-23"&gt;JavaScript 高级程序设计（第3版）&lt;/a&gt;》&lt;/li&gt;
&lt;li&gt;《&lt;a href="https://www.amazon.cn/gp/product/B00JVLEYY2/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;amp;amp;camp=536&amp;amp;amp;creative=3200&amp;amp;amp;creativeASIN=B00JVLEYY2&amp;amp;amp;linkCode=as2&amp;amp;amp;tag=vastwork-23"&gt;JavaScript 异步编程：设计快速响应的网络应用&lt;/a&gt;》&lt;/li&gt;
&lt;li&gt;《&lt;a href="https://www.amazon.cn/gp/product/B00GMXI1QY/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;amp;amp;camp=536&amp;amp;amp;creative=3200&amp;amp;amp;creativeASIN=B00GMXI1QY&amp;amp;amp;linkCode=as2&amp;amp;amp;tag=vastwork-23"&gt;Effective JavaScript：编写高质量JavaScript代码的68个有效方法&lt;/a&gt;》&lt;/li&gt;
&lt;li&gt;《&lt;a href="https://www.amazon.cn/gp/product/B00H706BIG/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;amp;amp;camp=536&amp;amp;amp;creative=3200&amp;amp;amp;creativeASIN=B00H706BIG&amp;amp;amp;linkCode=as2&amp;amp;amp;tag=vastwork-23"&gt;HTML5 权威指南&lt;/a&gt;》&lt;/li&gt;
&lt;li&gt;《&lt;a href="https://www.amazon.cn/gp/product/B015316VJY/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;amp;amp;camp=536&amp;amp;amp;creative=3200&amp;amp;amp;creativeASIN=B015316VJY&amp;amp;amp;linkCode=as2&amp;amp;amp;tag=vastwork-23"&gt;HTML5 秘籍（第2版）&lt;/a&gt;》&lt;/li&gt;
&lt;li&gt;《&lt;a href="https://www.amazon.cn/gp/product/B00K58535O/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;amp;amp;camp=536&amp;amp;amp;creative=3200&amp;amp;amp;creativeASIN=B00K58535O&amp;amp;amp;linkCode=as2&amp;amp;amp;tag=vastwork-23"&gt;HTML5 与 CSS3 基础教程（第八版）&lt;/a&gt;》&lt;/li&gt;
&lt;li&gt;《&lt;a href="https://www.amazon.cn/gp/product/B01ET3FO86/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;amp;amp;camp=536&amp;amp;amp;creative=3200&amp;amp;amp;creativeASIN=B01ET3FO86&amp;amp;amp;linkCode=as2&amp;amp;amp;tag=vastwork-23"&gt;CSS 揭秘&lt;/a&gt;》&lt;/li&gt;
&lt;li&gt;《&lt;a href="https://www.amazon.cn/gp/product/B00M2DKZ1W/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;amp;amp;camp=536&amp;amp;amp;creative=3200&amp;amp;amp;creativeASIN=B00M2DKZ1W&amp;amp;amp;linkCode=as2&amp;amp;amp;tag=vastwork-23"&gt;CSS 设计指南（第3版）&lt;/a&gt;》&lt;/li&gt;
&lt;li&gt;《&lt;a href="https://www.amazon.cn/gp/product/B0011F5SIC/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;amp;amp;camp=536&amp;amp;amp;creative=3200&amp;amp;amp;creativeASIN=B0011F5SIC&amp;amp;amp;linkCode=as2&amp;amp;amp;tag=vastwork-23"&gt;CSS 权威指南（第3版）&lt;/a&gt;》&lt;/li&gt;
&lt;li&gt;《&lt;a href="https://www.amazon.cn/gp/product/B01LXL42O5/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;amp;amp;camp=536&amp;amp;amp;creative=3200&amp;amp;amp;creativeASIN=B01LXL42O5&amp;amp;amp;linkCode=as2&amp;amp;amp;tag=vastwork-23"&gt;深入浅出 HTML 与 CSS&lt;/a&gt;》&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Java开发&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;《&lt;a href="https://www.amazon.cn/gp/product/B01ER75QC8/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;amp;amp;camp=536&amp;amp;amp;creative=3200&amp;amp;amp;creativeASIN=B01ER75QC8&amp;amp;amp;linkCode=as2&amp;amp;amp;tag=vastwork-23"&gt;Java8 实战&lt;/a&gt;》&lt;/li&gt;
&lt;li&gt;《&lt;a href="https://www.amazon.cn/gp/product/B0077K9XHW/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;amp;amp;camp=536&amp;amp;amp;creative=3200&amp;amp;amp;creativeASIN=B0077K9XHW&amp;amp;amp;linkCode=as2&amp;amp;amp;tag=vastwork-23"&gt;Java并发编程实战&lt;/a&gt;》&lt;/li&gt;
&lt;li&gt;《&lt;a href="https://www.amazon.cn/gp/product/B01DLB7Z66/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;amp;amp;camp=536&amp;amp;amp;creative=3200&amp;amp;amp;creativeASIN=B01DLB7Z66&amp;amp;amp;linkCode=as2&amp;amp;amp;tag=vastwork-23"&gt;Java性能权威指南&lt;/a&gt;》&lt;/li&gt;
&lt;li&gt;《&lt;a href="https://www.amazon.cn/gp/product/B00E0D2OX4/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;amp;amp;camp=536&amp;amp;amp;creative=3200&amp;amp;amp;creativeASIN=B00E0D2OX4&amp;amp;amp;linkCode=as2&amp;amp;amp;tag=vastwork-23"&gt;Java程序员修炼之道&lt;/a&gt;》&lt;/li&gt;
&lt;li&gt;《&lt;a href="https://www.amazon.cn/gp/product/B017MEN094/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;amp;amp;camp=536&amp;amp;amp;creative=3200&amp;amp;amp;creativeASIN=B017MEN094&amp;amp;amp;linkCode=as2&amp;amp;amp;tag=vastwork-23"&gt;实战Java高并发程序设计&lt;/a&gt;》&lt;/li&gt;
&lt;li&gt;《&lt;a href="https://www.amazon.cn/gp/product/B0011F7WU4/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;amp;amp;camp=536&amp;amp;amp;creative=3200&amp;amp;amp;creativeASIN=B0011F7WU4&amp;amp;amp;linkCode=as2&amp;amp;amp;tag=vastwork-23"&gt;Java编程思想 （第4版）&lt;/a&gt;》&lt;/li&gt;
&lt;li&gt;《&lt;a href="https://www.amazon.cn/gp/product/B01HI0BUF8/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;amp;amp;camp=536&amp;amp;amp;creative=3200&amp;amp;amp;creativeASIN=B01HI0BUF8&amp;amp;amp;linkCode=as2&amp;amp;amp;tag=vastwork-23"&gt;深入理解Java虚拟机（第2版）&lt;/a&gt;》&lt;/li&gt;
&lt;li&gt;《&lt;a href="https://www.amazon.cn/gp/product/B001PTGR52/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;amp;amp;camp=536&amp;amp;amp;creative=3200&amp;amp;amp;creativeASIN=B001PTGR52&amp;amp;amp;linkCode=as2&amp;amp;amp;tag=vastwork-23"&gt;Effective java 中文版（第2版）&lt;/a&gt;》&lt;/li&gt;
&lt;li&gt;《&lt;a href="https://www.amazon.cn/gp/product/B01M22BGUQ/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;amp;amp;camp=536&amp;amp;amp;creative=3200&amp;amp;amp;creativeASIN=B01M22BGUQ&amp;amp;amp;linkCode=as2&amp;amp;amp;tag=vastwork-23"&gt;Java核心技术·卷1：基础知识（原书第9版）&lt;/a&gt;》&lt;/li&gt;
&lt;li&gt;《&lt;a href="https://www.amazon.cn/gp/product/B00IK7SM6O/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;amp;amp;camp=536&amp;amp;amp;creative=3200&amp;amp;amp;creativeASIN=B00IK7SM6O&amp;amp;amp;linkCode=as2&amp;amp;amp;tag=vastwork-23"&gt;Java核心技术·卷2：高级特性（原书第9版）&lt;/a&gt;》&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;.NET&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;《&lt;a href="https://www.amazon.cn/gp/product/B00DVDDP0K/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;amp;amp;camp=536&amp;amp;amp;creative=3200&amp;amp;amp;creativeASIN=B00DVDDP0K&amp;amp;amp;linkCode=as2&amp;amp;amp;tag=vastwork-23"&gt;精通C#（第6版）&lt;/a&gt;》&lt;/li&gt;
&lt;li&gt;《&lt;a href="https://www.amazon.cn/gp/product/B00J94AG2A/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;amp;amp;camp=536&amp;amp;amp;creative=3200&amp;amp;amp;creativeASIN=B00J94AG2A&amp;amp;amp;linkCode=as2&amp;amp;amp;tag=vastwork-23"&gt;深入理解C#（第3版）&lt;/a&gt;》&lt;/li&gt;
&lt;li&gt;《&lt;a href="https://www.amazon.cn/gp/product/B00P8VZ8T4/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;amp;amp;camp=536&amp;amp;amp;creative=3200&amp;amp;amp;creativeASIN=B00P8VZ8T4&amp;amp;amp;linkCode=as2&amp;amp;amp;tag=vastwork-23"&gt;CLR via C#（第4版）&lt;/a&gt;》&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Python&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;《&lt;a href="https://www.amazon.cn/gp/product/B00UI93JD8/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;amp;amp;camp=536&amp;amp;amp;creative=3200&amp;amp;amp;creativeASIN=B00UI93JD8&amp;amp;amp;linkCode=as2&amp;amp;amp;tag=vastwork-23"&gt;集体智慧编程&lt;/a&gt;》&lt;/li&gt;
&lt;li&gt;《&lt;a href="https://www.amazon.cn/gp/product/B00P6OJ0TC/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;amp;amp;camp=536&amp;amp;amp;creative=3200&amp;amp;amp;creativeASIN=B00P6OJ0TC&amp;amp;amp;linkCode=as2&amp;amp;amp;tag=vastwork-23"&gt;笨办法学Python&lt;/a&gt;》&lt;/li&gt;
&lt;li&gt;《&lt;a href="https://www.amazon.cn/gp/product/B00KAFX65Q/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;amp;amp;camp=536&amp;amp;amp;creative=3200&amp;amp;amp;creativeASIN=B00KAFX65Q&amp;amp;amp;linkCode=as2&amp;amp;amp;tag=vastwork-23"&gt;Python基础教程&lt;/a&gt;》&lt;/li&gt;
&lt;li&gt;《Python源码剖析》&lt;/li&gt;
&lt;li&gt;《&lt;a href="https://www.amazon.cn/gp/product/B007NB2B4M/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;amp;amp;camp=536&amp;amp;amp;creative=3200&amp;amp;amp;creativeASIN=B007NB2B4M&amp;amp;amp;linkCode=as2&amp;amp;amp;tag=vastwork-23"&gt;Head First Python&lt;/a&gt;》&lt;/li&gt;
&lt;li&gt;《&lt;a href="https://www.amazon.cn/gp/product/B00HECW20S/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;amp;amp;camp=536&amp;amp;amp;creative=3200&amp;amp;amp;creativeASIN=B00HECW20S&amp;amp;amp;linkCode=as2&amp;amp;amp;tag=vastwork-23"&gt;与孩子一起学编程&lt;/a&gt;》&lt;/li&gt;
&lt;li&gt;《&lt;a href="https://www.amazon.cn/gp/product/B004TUJ7A6/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;amp;amp;camp=536&amp;amp;amp;creative=3200&amp;amp;amp;creativeASIN=B004TUJ7A6&amp;amp;amp;linkCode=as2&amp;amp;amp;tag=vastwork-23"&gt;Python学习手册（第4版）&lt;/a&gt;》&lt;/li&gt;
&lt;li&gt;《&lt;a href="https://www.amazon.cn/gp/product/B00WKR1OKG/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;amp;amp;camp=536&amp;amp;amp;creative=3200&amp;amp;amp;creativeASIN=B00WKR1OKG&amp;amp;amp;linkCode=as2&amp;amp;amp;tag=vastwork-23"&gt;Python Cookbook（第3版）&lt;/a&gt;》&lt;/li&gt;
&lt;li&gt;《&lt;a href="https://www.amazon.cn/gp/product/B01MCUN37Y/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;amp;amp;camp=536&amp;amp;amp;creative=3200&amp;amp;amp;creativeASIN=B01MCUN37Y&amp;amp;amp;linkCode=as2&amp;amp;amp;tag=vastwork-23"&gt;Python参考手册（第4版）&lt;/a&gt;》&lt;/li&gt;
&lt;li&gt;《&lt;a href="https://www.amazon.cn/gp/product/B01FQAS0KK/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;amp;amp;camp=536&amp;amp;amp;creative=3200&amp;amp;amp;creativeASIN=B01FQAS0KK&amp;amp;amp;linkCode=as2&amp;amp;amp;tag=vastwork-23"&gt;Python核心编程（第3版）&lt;/a&gt;》&lt;/li&gt;
&lt;li&gt;《&lt;a href="https://www.amazon.cn/gp/product/B01HCVUJFA/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;amp;amp;camp=536&amp;amp;amp;creative=3200&amp;amp;amp;creativeASIN=B01HCVUJFA&amp;amp;amp;linkCode=as2&amp;amp;amp;tag=vastwork-23"&gt;Python科学计算（第2版）&lt;/a&gt;》&lt;/li&gt;
&lt;li&gt;《&lt;a href="https://www.amazon.cn/gp/product/B00GHGZLWS/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;amp;amp;camp=536&amp;amp;amp;creative=3200&amp;amp;amp;creativeASIN=B00GHGZLWS&amp;amp;amp;linkCode=as2&amp;amp;amp;tag=vastwork-23"&gt;利用 Python 进行数据分析&lt;/a&gt;》&lt;/li&gt;
&lt;li&gt;《&lt;a href="https://www.amazon.cn/gp/product/B01ION3W54/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;amp;amp;camp=536&amp;amp;amp;creative=3200&amp;amp;amp;creativeASIN=B01ION3W54&amp;amp;amp;linkCode=as2&amp;amp;amp;tag=vastwork-23"&gt;Think Python：像计算机科学家一样思考Python（第2版）&lt;/a&gt;》&lt;/li&gt;
&lt;li&gt;《&lt;a href="https://www.amazon.cn/gp/product/B00MHDPIJ6/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;amp;amp;camp=536&amp;amp;amp;creative=3200&amp;amp;amp;creativeASIN=B00MHDPIJ6&amp;amp;amp;linkCode=as2&amp;amp;amp;tag=vastwork-23"&gt;Python编程实战:运用设计模式、并发和程序库创建高质量程序&lt;/a&gt;》&lt;/li&gt;
&lt;li&gt;《&lt;a href="https://www.amazon.cn/gp/product/B019ZRGBVU/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;amp;amp;camp=536&amp;amp;amp;creative=3200&amp;amp;amp;creativeASIN=B019ZRGBVU&amp;amp;amp;linkCode=as2&amp;amp;amp;tag=vastwork-23"&gt;Python绝技：运用Python成为顶级黑客&lt;/a&gt;》&lt;/li&gt;
&lt;li&gt;《&lt;a href="https://www.amazon.cn/gp/product/B0153177A6/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;amp;amp;camp=536&amp;amp;amp;creative=3200&amp;amp;amp;creativeASIN=B0153177A6&amp;amp;amp;linkCode=as2&amp;amp;amp;tag=vastwork-23"&gt;Flask Web开发:基于Python的Web应用开发实战&lt;/a&gt;》&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Android&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;《&lt;a href="https://www.amazon.cn/gp/product/B01FSXCBOQ/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;amp;amp;camp=536&amp;amp;amp;creative=3200&amp;amp;amp;creativeASIN=B01FSXCBOQ&amp;amp;amp;linkCode=as2&amp;amp;amp;tag=vastwork-23"&gt;Android编程权威指南（第2版）&lt;/a&gt;》&lt;/li&gt;
&lt;li&gt;《&lt;a href="https://www.amazon.cn/gp/product/B00SFZGX08/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;amp;amp;camp=536&amp;amp;amp;creative=3200&amp;amp;amp;creativeASIN=B00SFZGX08&amp;amp;amp;linkCode=as2&amp;amp;amp;tag=vastwork-23"&gt;移动应用UI设计模式（第2版）&lt;/a&gt;》&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;iOS&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;《&lt;a href="https://www.amazon.cn/gp/product/B00NKZCM3U/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;amp;amp;camp=536&amp;amp;amp;creative=3200&amp;amp;amp;creativeASIN=B00NKZCM3U&amp;amp;amp;linkCode=as2&amp;amp;amp;tag=vastwork-23"&gt;iOS编程实战&lt;/a&gt;》&lt;/li&gt;
&lt;li&gt;《&lt;a href="https://www.amazon.cn/gp/product/B013UG2ULW/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;amp;amp;camp=536&amp;amp;amp;creative=3200&amp;amp;amp;creativeASIN=B013UG2ULW&amp;amp;amp;linkCode=as2&amp;amp;amp;tag=vastwork-23"&gt;iOS编程（第4版）&lt;/a&gt;》&lt;/li&gt;
&lt;li&gt;《&lt;a href="https://www.amazon.cn/gp/product/B00DE60G3S/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;amp;amp;camp=536&amp;amp;amp;creative=3200&amp;amp;amp;creativeASIN=B00DE60G3S&amp;amp;amp;linkCode=as2&amp;amp;amp;tag=vastwork-23"&gt;Objective-C高级编程&lt;/a&gt;》&lt;/li&gt;
&lt;li&gt;《&lt;a href="https://www.amazon.cn/gp/product/B00IDSGY06/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;amp;amp;camp=536&amp;amp;amp;creative=3200&amp;amp;amp;creativeASIN=B00IDSGY06&amp;amp;amp;linkCode=as2&amp;amp;amp;tag=vastwork-23"&gt;Effective Objective-C 2.0：编写高质量iOS与OS X代码的52个有效方法&lt;/a&gt;》&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;PHP&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;《&lt;a href="https://www.amazon.cn/gp/product/B004R1QIJU/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;amp;amp;camp=536&amp;amp;amp;creative=3200&amp;amp;amp;creativeASIN=B004R1QIJU&amp;amp;amp;linkCode=as2&amp;amp;amp;tag=vastwork-23"&gt;Head First PHP &amp;amp; MySQL（中文版）&lt;/a&gt;》&lt;/li&gt;
&lt;li&gt;《&lt;a href="https://www.amazon.cn/gp/product/B005D6IRRY/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;amp;amp;camp=536&amp;amp;amp;creative=3200&amp;amp;amp;creativeASIN=B005D6IRRY&amp;amp;amp;linkCode=as2&amp;amp;amp;tag=vastwork-23"&gt;深入PHP：面向对象、模式与实践（第3版）&lt;/a&gt;》&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;C语言&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;《&lt;a href="https://www.amazon.cn/gp/product/B00IZW4DK8/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;amp;amp;camp=536&amp;amp;amp;creative=3200&amp;amp;amp;creativeASIN=B00IZW4DK8&amp;amp;amp;linkCode=as2&amp;amp;amp;tag=vastwork-23"&gt;C标准库&lt;/a&gt;》&lt;/li&gt;
&lt;li&gt;《&lt;a href="https://www.amazon.cn/gp/product/B00163LU68/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;amp;amp;camp=536&amp;amp;amp;creative=3200&amp;amp;amp;creativeASIN=B00163LU68&amp;amp;amp;linkCode=as2&amp;amp;amp;tag=vastwork-23"&gt;C和指针&lt;/a&gt;》&lt;/li&gt;
&lt;li&gt;《&lt;a href="https://www.amazon.cn/gp/product/B0012NIW9K/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;amp;amp;camp=536&amp;amp;amp;creative=3200&amp;amp;amp;creativeASIN=B0012NIW9K&amp;amp;amp;linkCode=as2&amp;amp;amp;tag=vastwork-23"&gt;C专家编程&lt;/a&gt;》&lt;/li&gt;
&lt;li&gt;《&lt;a href="https://www.amazon.cn/gp/product/B0012UMPBY/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;amp;amp;camp=536&amp;amp;amp;creative=3200&amp;amp;amp;creativeASIN=B0012UMPBY&amp;amp;amp;linkCode=as2&amp;amp;amp;tag=vastwork-23"&gt;C陷阱与缺陷&lt;/a&gt;》&lt;/li&gt;
&lt;li&gt;《&lt;a href="https://www.amazon.cn/gp/product/B01D10NSCM/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;amp;amp;camp=536&amp;amp;amp;creative=3200&amp;amp;amp;creativeASIN=B01D10NSCM&amp;amp;amp;linkCode=as2&amp;amp;amp;tag=vastwork-23"&gt;C语言接口与实现&lt;/a&gt;》&lt;/li&gt;
&lt;li&gt;《&lt;a href="https://www.amazon.cn/gp/product/B0011425T8/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;amp;amp;camp=536&amp;amp;amp;creative=3200&amp;amp;amp;creativeASIN=B0011425T8&amp;amp;amp;linkCode=as2&amp;amp;amp;tag=vastwork-23"&gt;C程序设计语言（第2版）&lt;/a&gt;》&lt;/li&gt;
&lt;li&gt;《C语言参考手册（第5版）》&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;C++&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;《&lt;a href="https://www.amazon.cn/gp/product/B00YLZIRHI/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;amp;amp;camp=536&amp;amp;amp;creative=3200&amp;amp;amp;creativeASIN=B00YLZIRHI&amp;amp;amp;linkCode=as2&amp;amp;amp;tag=vastwork-23"&gt;C++标准库&lt;/a&gt;》&lt;/li&gt;
&lt;li&gt;《&lt;a href="https://www.amazon.cn/gp/product/B005CFUQR0/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;amp;amp;camp=536&amp;amp;amp;creative=3200&amp;amp;amp;creativeASIN=B005CFUQR0&amp;amp;amp;linkCode=as2&amp;amp;amp;tag=vastwork-23"&gt;C++编程思想&lt;/a&gt;》&lt;/li&gt;
&lt;li&gt;&lt;span style="font-weight: normal;"&gt;《&lt;/span&gt;C++语言的设计与演化&lt;span style="font-weight: normal;"&gt;》&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;《&lt;a href="https://www.amazon.cn/gp/product/B003VPX6YS/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;amp;amp;camp=536&amp;amp;amp;creative=3200&amp;amp;amp;creativeASIN=B003VPX6YS&amp;amp;amp;linkCode=as2&amp;amp;amp;tag=vastwork-23"&gt;C++程序设计原理与实践&lt;/a&gt;》&lt;/li&gt;
&lt;li&gt;《&lt;a href="https://www.amazon.cn/gp/product/B00ESUIL0O/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;amp;amp;camp=536&amp;amp;amp;creative=3200&amp;amp;amp;creativeASIN=B00ESUIL0O&amp;amp;amp;linkCode=as2&amp;amp;amp;tag=vastwork-23"&gt;C++ Primer （中文第5版）&lt;/a&gt;》&lt;/li&gt;
&lt;li&gt;《&lt;a href="https://www.amazon.cn/gp/product/B00S6U4C6E/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;amp;amp;camp=536&amp;amp;amp;creative=3200&amp;amp;amp;creativeASIN=B00S6U4C6E&amp;amp;amp;linkCode=as2&amp;amp;amp;tag=vastwork-23"&gt;C++ Primer习题集(第5版)&lt;/a&gt; 》&lt;/li&gt;
&lt;li&gt;《&lt;a href="https://www.amazon.cn/gp/product/B01I9BNASA/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;amp;amp;camp=536&amp;amp;amp;creative=3200&amp;amp;amp;creativeASIN=B01I9BNASA&amp;amp;amp;linkCode=as2&amp;amp;amp;tag=vastwork-23"&gt;C++程序设计语言(第1-3部分)(原书第4版)&lt;/a&gt; 》&lt;/li&gt;
&lt;li&gt;《&lt;a href="https://www.amazon.cn/gp/product/B004G72P24/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;amp;amp;camp=536&amp;amp;amp;creative=3200&amp;amp;amp;creativeASIN=B004G72P24&amp;amp;amp;linkCode=as2&amp;amp;amp;tag=vastwork-23"&gt;Effective C++:改善程序与设计的55个具体做法(第3版)(中文版) &lt;/a&gt;》&lt;/li&gt;
&lt;li&gt;《&lt;a href="https://www.amazon.cn/gp/product/B004IP8BD6/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;amp;amp;camp=536&amp;amp;amp;creative=3200&amp;amp;amp;creativeASIN=B004IP8BD6&amp;amp;amp;linkCode=as2&amp;amp;amp;tag=vastwork-23"&gt;More Effective C++:35个改善编程与设计的有效方法(中文版) &lt;/a&gt;》
&amp;nbsp;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;机器学习和数据挖掘&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;《&lt;a href="https://www.amazon.cn/gp/product/B00JUE9DXW/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;amp;amp;camp=536&amp;amp;amp;creative=3200&amp;amp;amp;creativeASIN=B00JUE9DXW&amp;amp;amp;linkCode=as2&amp;amp;amp;tag=vastwork-23"&gt;数据之巅&lt;/a&gt;》&lt;/li&gt;
&lt;li&gt;《&lt;a href="https://www.amazon.cn/gp/product/B00NTM5GK0/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;amp;amp;camp=536&amp;amp;amp;creative=3200&amp;amp;amp;creativeASIN=B00NTM5GK0&amp;amp;amp;linkCode=as2&amp;amp;amp;tag=vastwork-23"&gt;矩阵分析&lt;/a&gt;》&lt;/li&gt;
&lt;li&gt;《&lt;a href="https://www.amazon.cn/gp/product/B002WC7NH2/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;amp;amp;camp=536&amp;amp;amp;creative=3200&amp;amp;amp;creativeASIN=B002WC7NH2&amp;amp;amp;linkCode=as2&amp;amp;amp;tag=vastwork-23"&gt;机器学习&lt;/a&gt;》&lt;/li&gt;
&lt;li&gt;《&lt;a href="https://www.amazon.cn/gp/product/B007TSFMTA/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;amp;amp;camp=536&amp;amp;amp;creative=3200&amp;amp;amp;creativeASIN=B007TSFMTA&amp;amp;amp;linkCode=as2&amp;amp;amp;tag=vastwork-23"&gt;统计学习方法&lt;/a&gt;》&lt;/li&gt;
&lt;li&gt;《&lt;a href="https://www.amazon.cn/gp/product/B01AG3ZV9K/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;amp;amp;camp=536&amp;amp;amp;creative=3200&amp;amp;amp;creativeASIN=B01AG3ZV9K&amp;amp;amp;linkCode=as2&amp;amp;amp;tag=vastwork-23"&gt;机器学习导论&lt;/a&gt;》&lt;/li&gt;
&lt;li&gt;《&lt;a href="https://www.amazon.cn/gp/product/B008AK5YJO/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;amp;amp;camp=536&amp;amp;amp;creative=3200&amp;amp;amp;creativeASIN=B008AK5YJO&amp;amp;amp;linkCode=as2&amp;amp;amp;tag=vastwork-23"&gt;推荐系统实践&lt;/a&gt;》&lt;/li&gt;
&lt;li&gt;《&lt;a href="https://www.amazon.cn/gp/product/B00D747PTK/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;amp;amp;camp=536&amp;amp;amp;creative=3200&amp;amp;amp;creativeASIN=B00D747PTK&amp;amp;amp;linkCode=as2&amp;amp;amp;tag=vastwork-23"&gt;机器学习实战&lt;/a&gt;》&lt;/li&gt;
&lt;li&gt;《&lt;a href="https://www.amazon.cn/gp/product/B00AY830HS/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;amp;amp;camp=536&amp;amp;amp;creative=3200&amp;amp;amp;creativeASIN=B00AY830HS&amp;amp;amp;linkCode=as2&amp;amp;amp;tag=vastwork-23"&gt;Web数据挖掘&lt;/a&gt;》&lt;/li&gt;
&lt;li&gt;《&lt;a href="https://www.amazon.cn/gp/product/B006PHIVNA/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;amp;amp;camp=536&amp;amp;amp;creative=3200&amp;amp;amp;creativeASIN=B006PHIVNA&amp;amp;amp;linkCode=as2&amp;amp;amp;tag=vastwork-23"&gt;深入浅出统计学&lt;/a&gt;》&lt;/li&gt;
&lt;li&gt;《&lt;a href="https://www.amazon.cn/gp/product/B00116C3DY/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;amp;amp;camp=536&amp;amp;amp;creative=3200&amp;amp;amp;creativeASIN=B00116C3DY&amp;amp;amp;linkCode=as2&amp;amp;amp;tag=vastwork-23"&gt;模式分类（第2版）&lt;/a&gt;》&lt;/li&gt;
&lt;li&gt;《&lt;a href="https://www.amazon.cn/gp/product/B00264GG56/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;amp;amp;camp=536&amp;amp;amp;creative=3200&amp;amp;amp;creativeASIN=B00264GG56&amp;amp;amp;linkCode=as2&amp;amp;amp;tag=vastwork-23"&gt;概率论与数理统计&lt;/a&gt;》&lt;/li&gt;
&lt;li&gt;《&lt;a href="https://www.amazon.cn/gp/product/B00PRH2BXA/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;amp;amp;camp=536&amp;amp;amp;creative=3200&amp;amp;amp;creativeASIN=B00PRH2BXA&amp;amp;amp;linkCode=as2&amp;amp;amp;tag=vastwork-23"&gt;统计学习基础(第2版)(英文)&lt;/a&gt; 》&lt;/li&gt;
&lt;li&gt;《&lt;a href="https://www.amazon.cn/gp/product/B007NR0T4A/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;amp;amp;camp=536&amp;amp;amp;creative=3200&amp;amp;amp;creativeASIN=B007NR0T4A&amp;amp;amp;linkCode=as2&amp;amp;amp;tag=vastwork-23"&gt;数据挖掘：概念与技术（第3版）&lt;/a&gt;》&lt;/li&gt;
&lt;li&gt;《&lt;a href="https://www.amazon.cn/gp/product/B00K5I91WK/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;amp;amp;camp=536&amp;amp;amp;creative=3200&amp;amp;amp;creativeASIN=B00K5I91WK&amp;amp;amp;linkCode=as2&amp;amp;amp;tag=vastwork-23"&gt;数据挖掘：实用机器学习工具与技术（原书第3版）&lt;/a&gt;》&lt;/li&gt;
&lt;li&gt;《&lt;a href="https://www.amazon.cn/gp/product/B011I34CGA/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;amp;amp;camp=536&amp;amp;amp;creative=3200&amp;amp;amp;creativeASIN=B011I34CGA&amp;amp;amp;linkCode=as2&amp;amp;amp;tag=vastwork-23"&gt;大数据：互联网大规模数据挖掘与分布式处理（第2版）&lt;/a&gt;》&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;数据库&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;《&lt;a href="https://www.amazon.cn/gp/product/B00H6X6M1A/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;amp;amp;camp=536&amp;amp;amp;creative=3200&amp;amp;amp;creativeASIN=B00H6X6M1A&amp;amp;amp;linkCode=as2&amp;amp;amp;tag=vastwork-23"&gt;SQL应用重构&lt;/a&gt;》&lt;/li&gt;
&lt;li&gt;《&lt;a href="https://www.amazon.cn/gp/product/0596009763/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;amp;amp;camp=536&amp;amp;amp;creative=3200&amp;amp;amp;creativeASIN=0596009763&amp;amp;amp;linkCode=as2&amp;amp;amp;tag=vastwork-23"&gt;SQL Cookbook&lt;/a&gt;》&lt;/li&gt;
&lt;li&gt;《&lt;a href="https://www.amazon.cn/gp/product/B00C1W58DE/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;amp;amp;camp=536&amp;amp;amp;creative=3200&amp;amp;amp;creativeASIN=B00C1W58DE&amp;amp;amp;linkCode=as2&amp;amp;amp;tag=vastwork-23"&gt;高性能MySQL （第3版）&lt;/a&gt;》&lt;/li&gt;
&lt;li&gt;《深入浅出SQL（中文版）》&lt;/li&gt;
&lt;li&gt;《&lt;a href="https://www.amazon.cn/gp/product/B00ETOV48K/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;amp;amp;camp=536&amp;amp;amp;creative=3200&amp;amp;amp;creativeASIN=B00ETOV48K&amp;amp;amp;linkCode=as2&amp;amp;amp;tag=vastwork-23"&gt;MySQL技术内幕 : InnoDB存储引擎（第2版）&lt;/a&gt;》&lt;/li&gt;
&lt;li&gt;《&lt;a href="https://www.amazon.cn/gp/product/B00KR87J8G/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;amp;amp;camp=536&amp;amp;amp;creative=3200&amp;amp;amp;creativeASIN=B00KR87J8G&amp;amp;amp;linkCode=as2&amp;amp;amp;tag=vastwork-23"&gt;深入浅出MySQL : 数据库开发、优化与管理维护&lt;/a&gt;》&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;测试&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;《&lt;a href="https://www.amazon.cn/gp/product/B003JBIV0S/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;amp;amp;camp=536&amp;amp;amp;creative=3200&amp;amp;amp;creativeASIN=B003JBIV0S&amp;amp;amp;linkCode=as2&amp;amp;amp;tag=vastwork-23"&gt;探索式软件测试&lt;/a&gt;》&lt;/li&gt;
&lt;li&gt;《&lt;a href="https://www.amazon.cn/gp/product/B00PVOND2W/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;amp;amp;camp=536&amp;amp;amp;creative=3200&amp;amp;amp;creativeASIN=B00PVOND2W&amp;amp;amp;linkCode=as2&amp;amp;amp;tag=vastwork-23"&gt;有效的单元测试&lt;/a&gt;》&lt;/li&gt;
&lt;li&gt;《&lt;a href="https://www.amazon.cn/gp/product/B00FH36R6G/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;amp;amp;camp=536&amp;amp;amp;creative=3200&amp;amp;amp;creativeASIN=B00FH36R6G&amp;amp;amp;linkCode=as2&amp;amp;amp;tag=vastwork-23"&gt;Google软件测试之道&lt;/a&gt;》&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;项目与团队&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;《&lt;a href="https://www.amazon.cn/gp/product/B00VR8ZO28/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;amp;amp;camp=536&amp;amp;amp;creative=3200&amp;amp;amp;creativeASIN=B00VR8ZO28&amp;amp;amp;linkCode=as2&amp;amp;amp;tag=vastwork-23"&gt;人月神话&lt;/a&gt;》&lt;/li&gt;
&lt;li&gt;《&lt;a href="https://www.amazon.cn/gp/product/B001DBRWL0/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;amp;amp;camp=536&amp;amp;amp;creative=3200&amp;amp;amp;creativeASIN=B001DBRWL0&amp;amp;amp;linkCode=as2&amp;amp;amp;tag=vastwork-23"&gt;快速软件开发&lt;/a&gt;》&lt;/li&gt;
&lt;li&gt;《&lt;a href="https://www.amazon.cn/gp/product/B00MO7R1SG/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;amp;amp;camp=536&amp;amp;amp;creative=3200&amp;amp;amp;creativeASIN=B00MO7R1SG&amp;amp;amp;linkCode=as2&amp;amp;amp;tag=vastwork-23"&gt;人件（原书第3版）&lt;/a&gt;》&lt;/li&gt;
&lt;li&gt;《&lt;a href="https://www.amazon.cn/gp/product/B00CBBKRQ8/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;amp;amp;camp=536&amp;amp;amp;creative=3200&amp;amp;amp;creativeASIN=B00CBBKRQ8&amp;amp;amp;linkCode=as2&amp;amp;amp;tag=vastwork-23"&gt;门后的秘密：卓越管理的故事&lt;/a&gt;》&lt;/li&gt;
&lt;li&gt;《&lt;a href="https://www.amazon.cn/gp/product/B00BLZMG8W/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;amp;amp;camp=536&amp;amp;amp;creative=3200&amp;amp;amp;creativeASIN=B00BLZMG8W&amp;amp;amp;linkCode=as2&amp;amp;amp;tag=vastwork-23"&gt;极客与团队：软件工程师的团队生存秘笈&lt;/a&gt;》&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;求职面试&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;《&lt;a href="https://www.amazon.cn/gp/product/B00G8VOQOG/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;amp;amp;camp=536&amp;amp;amp;creative=3200&amp;amp;amp;creativeASIN=B00G8VOQOG&amp;amp;amp;linkCode=as2&amp;amp;amp;tag=vastwork-23"&gt;程序员面试金典（第5版）&lt;/a&gt;》&lt;/li&gt;
&lt;li&gt;《&lt;a href="https://www.amazon.cn/gp/product/B00W5269HO/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;amp;amp;camp=536&amp;amp;amp;creative=3200&amp;amp;amp;creativeASIN=B00W5269HO&amp;amp;amp;linkCode=as2&amp;amp;amp;tag=vastwork-23"&gt;编程之美 : 微软技术面试心得&lt;/a&gt;》&lt;/li&gt;
&lt;li&gt;《&lt;a href="https://www.amazon.cn/gp/product/B00ALPRM7S/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;amp;amp;camp=536&amp;amp;amp;creative=3200&amp;amp;amp;creativeASIN=B00ALPRM7S&amp;amp;amp;linkCode=as2&amp;amp;amp;tag=vastwork-23"&gt;金领简历：敲开苹果、微软、谷歌的大门&lt;/a&gt;》&lt;/li&gt;
&lt;li&gt;《&lt;a href="https://www.amazon.cn/gp/product/B00L5LKMVU/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;amp;amp;camp=536&amp;amp;amp;creative=3200&amp;amp;amp;creativeASIN=B00L5LKMVU&amp;amp;amp;linkCode=as2&amp;amp;amp;tag=vastwork-23"&gt;剑指Offer：名企面试官精讲典型编程题（纪念版）&lt;/a&gt;》&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;编程之外&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;《&lt;a href="https://www.amazon.cn/gp/product/B005DSK4W8/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;amp;amp;camp=536&amp;amp;amp;creative=3200&amp;amp;amp;creativeASIN=B005DSK4W8&amp;amp;amp;linkCode=as2&amp;amp;amp;tag=vastwork-23"&gt;暗时间&lt;/a&gt;》&lt;/li&gt;
&lt;li&gt;《&lt;a href="https://www.amazon.cn/gp/product/B00P6OJ09C/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;amp;amp;camp=536&amp;amp;amp;creative=3200&amp;amp;amp;creativeASIN=B00P6OJ09C&amp;amp;amp;linkCode=as2&amp;amp;amp;tag=vastwork-23"&gt;数学之美&lt;/a&gt;》&lt;/li&gt;
&lt;li&gt;《&lt;a href="https://www.amazon.cn/gp/product/B00ANY9KZE/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;amp;amp;camp=536&amp;amp;amp;creative=3200&amp;amp;amp;creativeASIN=B00ANY9KZE&amp;amp;amp;linkCode=as2&amp;amp;amp;tag=vastwork-23"&gt;赢得朋友&lt;/a&gt;》&lt;/li&gt;
&lt;li&gt;《&lt;a href="https://www.amazon.cn/gp/product/B008MIFWJG/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;amp;amp;camp=536&amp;amp;amp;creative=3200&amp;amp;amp;creativeASIN=B008MIFWJG&amp;amp;amp;linkCode=as2&amp;amp;amp;tag=vastwork-23"&gt;精益创业&lt;/a&gt;》&lt;/li&gt;
&lt;li&gt;《&lt;a href="https://www.amazon.cn/gp/product/B00QPZARMA/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;amp;amp;camp=536&amp;amp;amp;creative=3200&amp;amp;amp;creativeASIN=B00QPZARMA&amp;amp;amp;linkCode=as2&amp;amp;amp;tag=vastwork-23"&gt;批判性思维&lt;/a&gt;》&lt;/li&gt;
&lt;li&gt;《&lt;a href="https://www.amazon.cn/gp/product/B00M2DKZNA/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;amp;amp;camp=536&amp;amp;amp;creative=3200&amp;amp;amp;creativeASIN=B00M2DKZNA&amp;amp;amp;linkCode=as2&amp;amp;amp;tag=vastwork-23"&gt;世界是数字的&lt;/a&gt;》&lt;/li&gt;
&lt;li&gt;《&lt;a href="https://www.amazon.cn/gp/product/B00A4H3JJS/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;amp;amp;camp=536&amp;amp;amp;creative=3200&amp;amp;amp;creativeASIN=B00A4H3JJS&amp;amp;amp;linkCode=as2&amp;amp;amp;tag=vastwork-23"&gt;程序员的数学&lt;/a&gt;》&lt;/li&gt;
&lt;li&gt;《&lt;a href="https://www.amazon.cn/gp/product/B00N4LZ6RO/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;amp;amp;camp=536&amp;amp;amp;creative=3200&amp;amp;amp;creativeASIN=B00N4LZ6RO&amp;amp;amp;linkCode=as2&amp;amp;amp;tag=vastwork-23"&gt;程序员健康指南&lt;/a&gt;》&lt;/li&gt;
&lt;li&gt;《&lt;a href="https://www.amazon.cn/gp/product/B005O4PUFC/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;amp;amp;camp=536&amp;amp;amp;creative=3200&amp;amp;amp;creativeASIN=B005O4PUFC&amp;amp;amp;linkCode=as2&amp;amp;amp;tag=vastwork-23"&gt;禅与摩托车维修艺术&lt;/a&gt;》&lt;/li&gt;
&lt;li&gt;《&lt;a href="https://www.amazon.cn/gp/product/B0081M8TZ2/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;amp;amp;camp=536&amp;amp;amp;creative=3200&amp;amp;amp;creativeASIN=B0081M8TZ2&amp;amp;amp;linkCode=as2&amp;amp;amp;tag=vastwork-23"&gt;关键对话：如何高效能沟通&lt;/a&gt;》&lt;/li&gt;
&lt;li&gt;《&lt;a href="https://www.amazon.cn/gp/product/B00EY8JUBO/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;amp;amp;camp=536&amp;amp;amp;creative=3200&amp;amp;amp;creativeASIN=B00EY8JUBO&amp;amp;amp;linkCode=as2&amp;amp;amp;tag=vastwork-23"&gt;写作法宝：非虚构写作指南&lt;/a&gt;》&lt;/li&gt;
&lt;li&gt;《&lt;a href="https://www.amazon.cn/gp/product/B00G1ZT2C0/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;amp;amp;camp=536&amp;amp;amp;creative=3200&amp;amp;amp;creativeASIN=B00G1ZT2C0&amp;amp;amp;linkCode=as2&amp;amp;amp;tag=vastwork-23"&gt;黑客与画家 : 来自计算机时代的高见&lt;/a&gt;》&lt;/li&gt;
&lt;li&gt;《&lt;a href="https://www.amazon.cn/gp/product/B00WDTQU8M/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;amp;amp;camp=536&amp;amp;amp;creative=3200&amp;amp;amp;creativeASIN=B00WDTQU8M&amp;amp;amp;linkCode=as2&amp;amp;amp;tag=vastwork-23"&gt;软件随想录（卷1）&lt;/a&gt;》《&lt;a href="https://www.amazon.cn/gp/product/B00WFT32FY/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;amp;amp;camp=536&amp;amp;amp;creative=3200&amp;amp;amp;creativeASIN=B00WFT32FY&amp;amp;amp;linkCode=as2&amp;amp;amp;tag=vastwork-23"&gt;软件随想录（卷2）&lt;/a&gt;》&lt;/li&gt;
&lt;li&gt;《&lt;a href="https://www.amazon.cn/gp/product/B00ICWNKT6/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;amp;amp;camp=536&amp;amp;amp;creative=3200&amp;amp;amp;creativeASIN=B00ICWNKT6&amp;amp;amp;linkCode=as2&amp;amp;amp;tag=vastwork-23"&gt;如何把事情做到最好：改变全球9800万人的人生指导书&lt;/a&gt;》&lt;/li&gt;
&lt;/ul&gt;</content></entry><entry><title>自定义类 Custom classes</title><link href="http://ivicel.github.io/zi-ding-yi-lei-custom-classes.html" rel="alternate"></link><published>2017-02-23T00:00:00+08:00</published><updated>2017-02-23T00:00:00+08:00</updated><author><name>Ivicel</name></author><id>tag:ivicel.github.io,2017-02-23:/zi-ding-yi-lei-custom-classes.html</id><summary type="html">&lt;h3&gt;内置类特殊属性&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nb"&gt;object&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="vm"&gt;__dict__&lt;/span&gt;

&lt;span class="n"&gt;instance&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="vm"&gt;__class__&lt;/span&gt;

&lt;span class="n"&gt;class&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="vm"&gt;__bases__&lt;/span&gt;

&lt;span class="n"&gt;definition&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="vm"&gt;__name__&lt;/span&gt;

&lt;span class="n"&gt;definition&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;__qualname__&lt;/span&gt;

&lt;span class="n"&gt;class&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="vm"&gt;__mro__&lt;/span&gt;

&lt;span class="n"&gt;class&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;mro&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="n"&gt;class&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;__subclasses__&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;自定义类都有一个&lt;code&gt;namespace&lt;/code&gt;，即一个字典对象来存储类的属性。&lt;code&gt;C.x&lt;/code&gt;即表示&lt;code&gt;C.__dict__['x']&lt;/code&gt;，当类&lt;code&gt;C&lt;/code&gt;中不存在属性&lt;code&gt;x&lt;/code&gt;，会依据继承顺序&lt;a href="https://www.python.org/download/releases/2.3/mro/"&gt;&lt;code&gt;MRO&lt;/code&gt;&lt;/a&gt;表来查找该属性。&lt;/p&gt;
&lt;p&gt;如若查找完基类后，依然找不到属性，才会调相应用&lt;code&gt;C.__getattribute__()&lt;/code&gt;、&lt;code&gt;C.__getattr__()&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;A&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;object&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="fm"&gt;__getattr__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;call __getattr__ …&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;h3&gt;内置类特殊属性&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nb"&gt;object&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="vm"&gt;__dict__&lt;/span&gt;

&lt;span class="n"&gt;instance&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="vm"&gt;__class__&lt;/span&gt;

&lt;span class="n"&gt;class&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="vm"&gt;__bases__&lt;/span&gt;

&lt;span class="n"&gt;definition&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="vm"&gt;__name__&lt;/span&gt;

&lt;span class="n"&gt;definition&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;__qualname__&lt;/span&gt;

&lt;span class="n"&gt;class&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="vm"&gt;__mro__&lt;/span&gt;

&lt;span class="n"&gt;class&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;mro&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="n"&gt;class&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;__subclasses__&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;自定义类都有一个&lt;code&gt;namespace&lt;/code&gt;，即一个字典对象来存储类的属性。&lt;code&gt;C.x&lt;/code&gt;即表示&lt;code&gt;C.__dict__['x']&lt;/code&gt;，当类&lt;code&gt;C&lt;/code&gt;中不存在属性&lt;code&gt;x&lt;/code&gt;，会依据继承顺序&lt;a href="https://www.python.org/download/releases/2.3/mro/"&gt;&lt;code&gt;MRO&lt;/code&gt;&lt;/a&gt;表来查找该属性。&lt;/p&gt;
&lt;p&gt;如若查找完基类后，依然找不到属性，才会调相应用&lt;code&gt;C.__getattribute__()&lt;/code&gt;、&lt;code&gt;C.__getattr__()&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;A&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;object&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="fm"&gt;__getattr__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;call __getattr__()&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;X&amp;#39;&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;              &lt;span class="c1"&gt;# &amp;#39;X&amp;#39;, __getattr__()并未调用&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="vm"&gt;__dict__&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;       &lt;span class="c1"&gt;# {&amp;#39;x&amp;#39;: &amp;#39;X&amp;#39;}&lt;/span&gt;

&lt;span class="c1"&gt;######################################&lt;/span&gt;

&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;A&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;object&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;A&amp;#39;&lt;/span&gt;

&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;B&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="fm"&gt;__getattr__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;call __getattr__()&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;B&amp;#39;&lt;/span&gt;

&lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;B&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; 
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;          &lt;span class="c1"&gt;# &amp;#39;A&amp;#39;, a.__getattr__()并不会调用&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;&lt;code&gt;__slots__&lt;/code&gt; 的特殊性&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;类变量&lt;code&gt;__slots__&lt;/code&gt; 可赋值 string, iterable，字符list&lt;/p&gt;
&lt;p&gt;定义&lt;code&gt;__slots__&lt;/code&gt;变量后，类将不再使用&lt;code&gt;__dict__&lt;/code&gt;来存储属性&lt;/p&gt;
&lt;p&gt;类不会自动生成&lt;code&gt;__dict__&lt;/code&gt;和&lt;code&gt;__weakref__&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;对象方法&lt;/h3&gt;
&lt;p&gt;类中的对象方法(instance method\bound method), 其方法名也存在&lt;code&gt;M.__dict__&lt;/code&gt;中，对象方法有两个只读变量&lt;code&gt;mehtod.__self__&lt;/code&gt;和&lt;code&gt;method.__func__&lt;/code&gt;，当调用方法时&lt;code&gt;method(arg1, arg2)&lt;/code&gt;时，等于调用&lt;code&gt;method.__func__(method.__self__, arg1, arg2)&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;A&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;object&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;m&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;call method m&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;   &lt;span class="c1"&gt;# a.m.__func__(a.m.__self__)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;访问控制 &lt;code&gt;self.x&lt;/code&gt;&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="fm"&gt;__getattr__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="fm"&gt;__getattribute__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# Attribute assignments and deletions update the instance’s dictionary, never a class’s dictionary.&lt;/span&gt;
&lt;span class="c1"&gt;# If the class has a __setattr__() or __delattr__() method, &lt;/span&gt;
&lt;span class="c1"&gt;# this is called instead of updating the instance dictionary directly.&lt;/span&gt;
&lt;span class="c1"&gt;# 删除对象的属性或者对对象属性赋值，是直接对实例 __dict__ 的操作&lt;/span&gt;
&lt;span class="c1"&gt;# 当定义了 __setattr__ 、__delattr__ 方法时，使用方法替代&lt;/span&gt;
&lt;span class="fm"&gt;__setattr__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="fm"&gt;__delattr__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;基类 &lt;code&gt;object&lt;/code&gt; 中并没有 &lt;code&gt;__getattr__()&lt;/code&gt; 方法，所以，只有当自定义类的自定义了&lt;code&gt;__getattr__()&lt;/code&gt;方法，才有可能访问该方法&lt;/p&gt;
&lt;p&gt;访问属性&lt;code&gt;self.x&lt;/code&gt;时，首先会隐式调用&lt;code&gt;__getattribute__()&lt;/code&gt;方法，只有在&lt;code&gt;__getattribute__()&lt;/code&gt;中显示调用或者&lt;code&gt;raise&lt;/code&gt;出&lt;code&gt;AttributeError&lt;/code&gt;时，才会调用&lt;code&gt;__getattr__()&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;类中没有定义&lt;code&gt;__getattribute__()&lt;/code&gt;时，当&lt;code&gt;self.x&lt;/code&gt;不存在时，默认&lt;code&gt;raise&lt;/code&gt;出&lt;code&gt;AttributeError&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;类中有定义&lt;code&gt;__getattribute__()&lt;/code&gt;时，访问&lt;code&gt;self.x&lt;/code&gt;时，调用&lt;code&gt;__getattribute__()&lt;/code&gt;，除非显示调用&lt;code&gt;__getattr__()&lt;/code&gt;或者&lt;code&gt;raise&lt;/code&gt;出&lt;code&gt;AttributeError&lt;/code&gt;,才会调用&lt;code&gt;__getattr__()&lt;/code&gt;如若存在&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;在定义&lt;code&gt;__getattribute__()&lt;/code&gt;时，为避免无限递归调用，一般使用&lt;code&gt;object.__getattribute__(self, name)&lt;/code&gt;来获取对象的值&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;A&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;object&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="fm"&gt;__getattr__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;get =&amp;gt; &amp;#39;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="fm"&gt;__getattribute__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;get attribute =&amp;gt; &amp;#39;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;raise&lt;/span&gt; &lt;span class="ne"&gt;AttributeError&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;  &lt;span class="c1"&gt;# 隐式调用 __getattr__()&lt;/span&gt;



&lt;span class="c1"&gt;# get attribute =&amp;gt; b&lt;/span&gt;
&lt;span class="c1"&gt;# get =&amp;gt; b&lt;/span&gt;
&lt;span class="c1"&gt;# None&lt;/span&gt;
&lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;########################################&lt;/span&gt;

&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;A&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;object&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="fm"&gt;__getattr__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;get =&amp;gt; &amp;#39;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# get =&amp;gt; b&lt;/span&gt;
&lt;span class="c1"&gt;# None&lt;/span&gt;
&lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;########################################&lt;/span&gt;

&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;A&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;object&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="fm"&gt;__getattribute__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;get attribute =&amp;gt; &amp;#39;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;


&lt;span class="c1"&gt;# get attribute =&amp;gt; b&lt;/span&gt;
&lt;span class="c1"&gt;# None&lt;/span&gt;
&lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;自定义序列 self[x]&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="fm"&gt;__len__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;                       &lt;span class="c1"&gt;# len() 方法&lt;/span&gt;

&lt;span class="fm"&gt;__getitem__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;              &lt;span class="c1"&gt;# self[key]&lt;/span&gt;

&lt;span class="fm"&gt;__setitem__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;              &lt;span class="c1"&gt;# self[key] = XXX&lt;/span&gt;

&lt;span class="fm"&gt;__iter__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;                 &lt;span class="c1"&gt;# 迭代器&lt;/span&gt;

&lt;span class="fm"&gt;__reversed__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;                  &lt;span class="c1"&gt;# reversed() 方法&lt;/span&gt;

&lt;span class="fm"&gt;__contains__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;item&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;            &lt;span class="c1"&gt;# in 和 not in 测试&lt;/span&gt;

&lt;span class="fm"&gt;__missing__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;              &lt;span class="c1"&gt;# self[key] 不存在时&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;当类没有定义&lt;code&gt;__getitem__()&lt;/code&gt;时，&lt;code&gt;self['x']&lt;/code&gt;会产生&lt;strong&gt;&lt;code&gt;Type Error&lt;/code&gt;:object is not subscriptable&lt;/strong&gt;, 定义&lt;code&gt;__getitem__()&lt;/code&gt;后，类变成一个&lt;strong&gt;subscriptor&lt;/strong&gt;，&lt;code&gt;self['x']&lt;/code&gt;隐式调用&lt;code&gt;__getitem__()&lt;/code&gt;。一般在普通的如&lt;code&gt;list&lt;/code&gt;中，&lt;code&gt;x&lt;/code&gt;不存在或错误会产生&lt;code&gt;KeyError&lt;/code&gt;，超出范围则产生&lt;code&gt;IndexError&lt;/code&gt;&lt;/p&gt;
&lt;h3&gt;描述符对象&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="fm"&gt;__get__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;instance&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;owner&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="fm"&gt;__set__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;instance&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;owner&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="fm"&gt;__delete__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;instance&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;owner&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# 生成描述符实例时调用&lt;/span&gt;
&lt;span class="n"&gt;__set_name__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;owner&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;blockquote&gt;
&lt;p&gt;当一个类实现&lt;code&gt;__get__()&lt;/code&gt; &lt;code&gt;__set__()&lt;/code&gt; &lt;code&gt;__delete__()&lt;/code&gt;中一个方法，称为&lt;strong&gt;描述符类&lt;/strong&gt;(&lt;code&gt;decriptor class&lt;/code&gt;)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;定义 &lt;code&gt;__set__()&lt;/code&gt; and/or &lt;code&gt;__delete__()&lt;/code&gt;，称为&lt;strong&gt;数据描述符&lt;/strong&gt;(&lt;code&gt;data descriptor&lt;/code&gt;); 没有定义其中一个的称为&lt;strong&gt;非数据描述符&lt;/strong&gt;(&lt;code&gt;non-data descriptor&lt;/code&gt;)&lt;/p&gt;
&lt;p&gt;通常&lt;code&gt;data descriptor&lt;/code&gt;都定义&lt;code&gt;__set__()&lt;/code&gt;和&lt;code&gt;__get__()&lt;/code&gt;，&lt;code&gt;non-data descriptor&lt;/code&gt;只定义&lt;code&gt;__get__()&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The following methods only apply when an instance of the class containing the method (a so-called descriptor class) appears in an owner class (the descriptor must be in either the owner’s class dictionary or in the class dictionary for one of its parents). In the examples below, “the attribute” refers to the attribute whose name is the key of the property in the owner class’ &lt;code&gt;__dict__&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;只有描述符类的实例&lt;code&gt;instance&lt;/code&gt;是&lt;code&gt;owner_class&lt;/code&gt;中或&lt;code&gt;owner_class&lt;/code&gt;的某一个父类中&lt;code&gt;__dict__&lt;/code&gt;中属性的实例，描述符方法才会调用&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;描述符调用&lt;code&gt;a.x&lt;/code&gt;和&lt;code&gt;A.x&lt;/code&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;直接调用&lt;code&gt;x.__get__(a)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;实例对象绑定：&lt;code&gt;a.x&lt;/code&gt;即&lt;code&gt;type(a).__dict__['x'].__get__(a, type(a))&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;类绑定：&lt;code&gt;A.x&lt;/code&gt;即&lt;code&gt;A.__dict__['x'].__get__(None, A)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Super绑定(继承的类有类属性是描述符的实例对象)：&lt;code&gt;super(B, obj).m&lt;/code&gt;查找&lt;code&gt;obj.__class__.__mro__&lt;/code&gt;，当找到&lt;code&gt;A&lt;/code&gt;类有&lt;code&gt;m&lt;/code&gt;属性为描述符对象时调用&lt;code&gt;A.__dict__['m'].__get__(obj, obj.__class__)&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt; &lt;span class="nx"&gt;example&lt;/span&gt;
&lt;span class="err"&gt;#&lt;/span&gt; &lt;span class="nx"&gt;owner的类属性是一个decriptor的实例&lt;/span&gt;
&lt;span class="kr"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;A&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;object&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
    &lt;span class="nx"&gt;def&lt;/span&gt; &lt;span class="nx"&gt;__get__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;instance&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;cls&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
        &lt;span class="nx"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;call A.__get__()&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Class A&amp;#39;&lt;/span&gt;

&lt;span class="kr"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;B&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;object&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
    &lt;span class="nx"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;A&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="err"&gt;#&lt;/span&gt; &lt;span class="nx"&gt;call&lt;/span&gt; &lt;span class="nx"&gt;A&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;__get__&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="err"&gt;#&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Class A&amp;#39;&lt;/span&gt; 
&lt;span class="nx"&gt;b&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;B&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="nx"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  

&lt;span class="err"&gt;##############################&lt;/span&gt;

&lt;span class="err"&gt;#&lt;/span&gt; &lt;span class="nx"&gt;owner的父类的属性是一个decriptor的实例&lt;/span&gt;
&lt;span class="kr"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;A&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;object&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
    &lt;span class="nx"&gt;def&lt;/span&gt; &lt;span class="nx"&gt;__get__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;instance&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;cls&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
        &lt;span class="nx"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;call A.__get__()&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Class A&amp;#39;&lt;/span&gt;

&lt;span class="kr"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;B&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;object&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
    &lt;span class="nx"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;A&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="kr"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;C&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;B&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
    &lt;span class="nx"&gt;pass&lt;/span&gt;

&lt;span class="err"&gt;#&lt;/span&gt; &lt;span class="nx"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;call A.__get__()&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="err"&gt;#&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Class A&amp;#39;&lt;/span&gt;
&lt;span class="nx"&gt;c&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;C&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="nx"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;c&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h4&gt;对象属性访问原理&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;访问顺序：&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;资料描述器(&lt;code&gt;data descriptor&lt;/code&gt;)优先于实例变量(&lt;code&gt;instance.attribute&lt;/code&gt;)，实例变量优先于非资料描述器(&lt;code&gt;non-data descriptor&lt;/code&gt;)，&lt;code&gt;__getattr__()&lt;/code&gt;方法(如果对象中包含的话) 具有最低的优先级&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;descriptor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;object&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="fm"&gt;__get__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;instance&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="bp"&gt;cls&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;__get__()&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="fm"&gt;__set__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;instance&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;__set__()&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;A&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;object&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;descriptor&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="fm"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="c1"&gt;# 资料描述符优先实例变量&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;x&amp;#39;&lt;/span&gt;        &lt;span class="c1"&gt;#=&amp;gt; type(a).__dict__[&amp;#39;x&amp;#39;].__set__(a, type(a))&lt;/span&gt;


&lt;span class="c1"&gt;# &amp;#39;__set__()&amp;#39;&lt;/span&gt;
&lt;span class="c1"&gt;# &amp;#39;__get__()&amp;#39;&lt;/span&gt;
&lt;span class="c1"&gt;# &amp;#39;__set__()&amp;#39;       &lt;/span&gt;
&lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;         &lt;span class="c1"&gt;#=&amp;gt; type(a).__dict__[&amp;#39;x&amp;#39;].__get__(a, type(a))&lt;/span&gt;
&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;     &lt;span class="c1"&gt;#=&amp;gt; type(a).__dict__[&amp;#39;x&amp;#39;].__set__(a, type(a))&lt;/span&gt;

&lt;span class="c1"&gt;##############################################&lt;/span&gt;

&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;descriptor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;object&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="fm"&gt;__get__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;instance&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="bp"&gt;cls&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;__get__()&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;A&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;object&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;descriptor&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="fm"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="c1"&gt;# 实例变量优先非资料描述符&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;x&amp;#39;&lt;/span&gt;        &lt;span class="c1"&gt;#=&amp;gt; self.__dict__[&amp;#39;x&amp;#39;] = &amp;#39;x&amp;#39;&lt;/span&gt;


&lt;span class="c1"&gt;# x&lt;/span&gt;
&lt;span class="c1"&gt;# {&amp;#39;x&amp;#39;: &amp;#39;x&amp;#39;}        &lt;/span&gt;
&lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;          
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="vm"&gt;__dict__&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;       

&lt;span class="c1"&gt;##############################################&lt;/span&gt;

&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;descriptor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;object&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="fm"&gt;__get__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;instance&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="bp"&gt;cls&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;__get__()&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;A&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;object&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;descriptor&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="fm"&gt;__getattr__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;__getattr__()&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# &amp;#39;__get__()&amp;#39;   &lt;/span&gt;
&lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="c1"&gt;# 非资料描述符优先 __getattr__ &lt;/span&gt;
&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;         &lt;span class="c1"&gt;#=&amp;gt; type(a).__dict__[&amp;#39;x&amp;#39;].__get__(a, type(a))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h4&gt;描述符(descriptor)举例&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;内置 property 的实现&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Property&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;object&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="fm"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;func&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_func_getter&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;func&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="fm"&gt;__get__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;instance&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="bp"&gt;cls&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_func_getter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;instance&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="fm"&gt;__set__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;instance&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nb"&gt;getattr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;_setter&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="bp"&gt;False&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
            &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_func_setter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;instance&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="k"&gt;raise&lt;/span&gt; &lt;span class="ne"&gt;AttributeError&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;can&amp;#39;t set attribute&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;setter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;func&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_setter&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_func_setter&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;func&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;

&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;A&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;object&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="nd"&gt;@Property&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;say_hello&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nb"&gt;hasattr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;_x&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_x&lt;/span&gt;
        &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;xxxxxxxxxxxxx&amp;#39;&lt;/span&gt;

    &lt;span class="nd"&gt;@say_hello.setter&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;say_hello&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;say hello again&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;classmethod&lt;/code&gt;和&lt;code&gt;staticmethod&lt;/code&gt;的简单实现&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;ClassMethod&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;object&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="fm"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;func&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_f&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;func&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="fm"&gt;__get__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;instance&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="bp"&gt;cls&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;func&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_f&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;cls&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;func&lt;/span&gt;

&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;StaticMethod&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;object&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="fm"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_f&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="fm"&gt;__get__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;instance&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="bp"&gt;cls&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_f&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;hr&gt;
&lt;h3&gt;比较操作符&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="fm"&gt;__eq__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;other&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;     &lt;span class="c1"&gt;# ==&lt;/span&gt;

&lt;span class="fm"&gt;__ne__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;other&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;     &lt;span class="c1"&gt;# !=&lt;/span&gt;

&lt;span class="fm"&gt;__lt__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;other&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;     &lt;span class="c1"&gt;# &amp;lt;&lt;/span&gt;

&lt;span class="fm"&gt;__gt__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;other&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;     &lt;span class="c1"&gt;# &amp;gt;&lt;/span&gt;

&lt;span class="fm"&gt;__le__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;other&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;     &lt;span class="c1"&gt;# &amp;lt;=&lt;/span&gt;

&lt;span class="fm"&gt;__ge__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;other&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;     &lt;span class="c1"&gt;# &amp;gt;=&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;数值操作符&lt;/h3&gt;
&lt;p&gt;.1 一元操作符&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;__post__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;          &lt;span class="c1"&gt;# 取正 +some_object&lt;/span&gt;

&lt;span class="fm"&gt;__neg__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;           &lt;span class="c1"&gt;# 取负 -some_object&lt;/span&gt;

&lt;span class="fm"&gt;__abs__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;           &lt;span class="c1"&gt;# 绝对值 abs()&lt;/span&gt;

&lt;span class="fm"&gt;__invert__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;        &lt;span class="c1"&gt;# 取反 ~&lt;/span&gt;

&lt;span class="n"&gt;__round__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;      &lt;span class="c1"&gt;# 内建函数 round()&lt;/span&gt;

&lt;span class="n"&gt;__floor__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;         &lt;span class="c1"&gt;# math.floor() 函数，向下取整&lt;/span&gt;

&lt;span class="n"&gt;__ceil__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;          &lt;span class="c1"&gt;# math.ceil() 函数，向上取整&lt;/span&gt;

&lt;span class="n"&gt;__trunc__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;         &lt;span class="c1"&gt;# math.trunc() 函数，距离0最返的整数&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;.2 算数操作符&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="fm"&gt;__add__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;other&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="fm"&gt;__sub__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;other&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="fm"&gt;__mul__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;other&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="fm"&gt;__floordiv__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;other&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="fm"&gt;__truediv__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;other&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="fm"&gt;__mod__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;other&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="fm"&gt;__divmod__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;other&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="fm"&gt;__pow__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="fm"&gt;__lshift__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;other&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="fm"&gt;__rshift__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;other&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="fm"&gt;__and__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;other&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="fm"&gt;__or__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;other&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="fm"&gt;__xor__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;other&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;.3 反射算数运算符&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="fm"&gt;__radd__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;o&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="fm"&gt;__rsub__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;o&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="fm"&gt;__rmul__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;o&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="fm"&gt;__rfloordiv__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;o&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="fm"&gt;__rtruediv__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;o&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="fm"&gt;__rmod__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;o&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="fm"&gt;__rpow__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="fm"&gt;__rlshift__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;o&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="fm"&gt;__rshift__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;o&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;_rand__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;o&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="fm"&gt;__ror__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;o&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="fm"&gt;__rxor__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;o&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;.4 增强赋值运算符&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="fm"&gt;__iadd__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;o&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="fm"&gt;__isub__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;o&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="fm"&gt;__imul__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;o&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="fm"&gt;__ifloordiv__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;o&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="fm"&gt;__itruediv__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;o&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="fm"&gt;__imod__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;o&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="fm"&gt;__ipow__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;o&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="fm"&gt;__ilshift__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;o&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="fm"&gt;__irshift__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;o&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="fm"&gt;__iand__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;o&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="fm"&gt;__ixor__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;o&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;.5 类型转换操作符&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="fm"&gt;__int__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="fm"&gt;__long__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="fm"&gt;__float__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="fm"&gt;__complex__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="fm"&gt;__oct__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="fm"&gt;__hex__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="fm"&gt;__index__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;__trunc__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;类的表示&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="fm"&gt;__str__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="fm"&gt;__repr__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;__format__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="fm"&gt;__hash__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;__dir__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;反射&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# isinstance(instance, class) 方法&lt;/span&gt;
&lt;span class="fm"&gt;__instancecheck__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;instance&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;       

&lt;span class="c1"&gt;# issubclass(subclass, class) 方法&lt;/span&gt;
&lt;span class="fm"&gt;__subclasscheck__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;subclass&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;       
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;抽象基类&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;可调用的对象&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="fm"&gt;__call__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="o"&gt;...&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;

&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;A&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="fm"&gt;__call__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;pass&lt;/span&gt;

&lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;     &lt;span class="c1"&gt;# 调用A.__call__()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;上下文管理器&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# 使用 with 声明时调用，返回值即为 as 后的东西&lt;/span&gt;
&lt;span class="fm"&gt;__enter__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# 退出 with 时调用，处理 with 产生的 exception&lt;/span&gt;
&lt;span class="fm"&gt;__exit__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;exceptiop_type&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;exception_value&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;traceback&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;拷贝&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;__copy__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;__deepcopy__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;memodict&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</content><category term="python"></category><category term="魔术方法"></category></entry></feed>